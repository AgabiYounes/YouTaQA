  <page>
    <title>Chinese remainder theorem</title>
    <ns>0</ns>
    <id>7713</id>
    <revision>
      <id>941306325</id>
      <parentid>941305818</parentid>
      <timestamp>2020-02-17T20:17:28Z</timestamp>
      <contributor>
        <username>Magidin</username>
        <id>228772</id>
      </contributor>
      <minor />
      <comment>Undid revision 941305818 by [[Special:Contributions/Prasoon Vishwakarma|Prasoon Vishwakarma]] ([[User talk:Prasoon Vishwakarma|talk]]) rv; 23 and 233 are congruent modulo 105 (233-23=210=2(105)). Solutions are usually given with the least positive representative.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{short description|Theorem for solving simultaneous congruences}}
[[File:Sun_Tzu_Chinese_remainder_theorem.svg|thumb|Sun-tzu's original formulation: {{nowrap|''x'' &amp;equiv; 2 (mod 3)}} {{nowrap|&amp;equiv; 3 (mod 5)}} {{nowrap|&amp;equiv; 2 (mod 7)}} {{nowrap|with the solution}} {{nowrap|''x'' &lt;nowiki&gt;=&lt;/nowiki&gt; 23 + 105''k''}} {{nowrap|where ''k'' &amp;isin; ℤ}}]]

In [[number theory]], the '''Chinese remainder theorem''' states that if one knows the remainders of the [[Euclidean division]] of an [[integer]] ''n'' by several integers, then one can determine uniquely the remainder of the division of ''n'' by the product of these integers, under the condition that the [[divisor]]s are [[pairwise coprime]].

The earliest known statement of the theorem is by the Chinese mathematician Sun-tzu in the ''[[Sunzi Suanjing|Sun-tzu Suan-ching]]'' in the 3rd century AD.

The Chinese remainder theorem is widely used for computing with large integers, as it allows replacing a computation for which one knows a bound on the size of the result by several similar computations on small integers.

The Chinese remainder theorem (expressed in terms of [[Modular arithmetic#Congruence relation|congruence]]s) is true over every [[principal ideal domain]]. It has been generalized to any [[commutative ring]], with a formulation involving [[ideal (ring theory)|ideals]].

==History==
The earliest known statement of the theorem, as a problem with specific numbers, appears in the 3rd-century book ''[[Sunzi Suanjing| Sun-tzu Suan-ching]]'' by the Chinese mathematician Sun-tzu:&lt;ref name=Katz&gt;{{harvnb|Katz|1998|page=197}}&lt;/ref&gt;

{{quote|There are certain things whose number is unknown. If we count them by threes, we have two left over; by fives, we have three left over; and by sevens, two are left over. How many things are there?&lt;ref&gt;{{harvnb|Dence|Dence|1999|page=156}}&lt;/ref&gt;}}

Sun-tzu's work contains neither a proof nor a full algorithm.&lt;ref&gt;{{harvnb|Dauben|2007|page=302}}&lt;/ref&gt; What amounts to an algorithm for solving this problem was described by [[Aryabhata]] (6th century).&lt;ref&gt;{{harvnb|Kak|1986}}&lt;/ref&gt; Special cases of the Chinese remainder theorem were also known to [[Brahmagupta]] (7th century), and appear in [[Fibonacci]]'s [[Liber Abaci]] (1202).&lt;ref&gt;{{harvnb|Pisano|2002|pages=402–403}}&lt;/ref&gt; The result was later generalized with a complete solution called ''Ta-yan-shu'' ({{lang|zh|大衍術}}) in [[Qin Jiushao|Ch'in Chiu-shao]]'s 1247 ''[[Mathematical Treatise in Nine Sections]]'' ({{lang|zh|數書九章}}, ''Shu-shu Chiu-chang'')&lt;ref&gt;{{harvnb|Dauben|2007|page=310}}&lt;/ref&gt; which was translated into English in early 19th century by British missionary [[Alexander Wylie (missionary)|Alexander Wylie]].&lt;ref&gt;{{harvnb|Libbrecht|1973}}&lt;/ref&gt;

[[File:Disqvisitiones-800.jpg|thumb|The Chinese remainder theorem appears in [[Carl Friedrich Gauss|Gauss]]'s 1801 book ''[[Disquisitiones Arithmeticae]]''.&lt;ref name=&quot;Gauss1801.loc=32-36&quot;&gt;{{Harvnb|Gauss|1986|loc=Art. 32–36}}&lt;/ref&gt;]]

The notion of congruences was first introduced and used by [[Carl Friedrich Gauss|Gauss]] in his ''Disquisitiones Arithmeticae'' of 1801.&lt;ref&gt;{{harvnb|Ireland|Rosen|1990|page=36}}&lt;/ref&gt; Gauss illustrates the Chinese remainder theorem on a problem involving calendars, namely, &quot;to find the years that have a certain period number with respect to the solar and lunar cycle and the Roman indiction.&quot;&lt;ref&gt;{{harvnb|Ore|1988|page=247}}&lt;/ref&gt; Gauss introduces a procedure for solving the problem that had already been used by [[Leonhard Euler|Euler]] but was in fact an ancient method that had appeared several times.&lt;ref&gt;{{harvnb|Ore|1988|page=245}}&lt;/ref&gt;

==Theorem statement==
Let ''n''&lt;sub&gt;1&lt;/sub&gt;, ..., ''n''&lt;sub&gt;''k''&lt;/sub&gt; be integers greater than 1, which are often called ''[[modular arithmetic|moduli]]'' or ''[[Euclidean division|divisors]]''. Let us denote by ''N'' the product of the ''n''&lt;sub&gt;''i''&lt;/sub&gt;.

The Chinese remainder theorem asserts that if the ''n''&lt;sub&gt;''i''&lt;/sub&gt; are [[pairwise coprime]], and if ''a''&lt;sub&gt;1&lt;/sub&gt;, ..., ''a''&lt;sub&gt;''k''&lt;/sub&gt; are integers such that 0 ≤ ''a''&lt;sub&gt;''i''&lt;/sub&gt; &lt; ''n''&lt;sub&gt;''i''&lt;/sub&gt; for every ''i'', then there is one and only one integer ''x'', such that 0 ≤ ''x'' &lt; ''N'' and the remainder of the [[Euclidean division]] of ''x'' by ''n''&lt;sub&gt;''i''&lt;/sub&gt; is ''a''&lt;sub&gt;''i''&lt;/sub&gt; for every ''i''.

This may be restated as follows in term of [[congruence relation|congruence]]s:
If the ''n''&lt;sub&gt;''i''&lt;/sub&gt; are pairwise coprime, and if ''a''&lt;sub&gt;1&lt;/sub&gt;, ..., ''a''&lt;sub&gt;''k''&lt;/sub&gt; are any integers, then there exists an integer ''x'' such that

:&lt;math&gt;\begin{align}
 x &amp;\equiv a_1  \pmod{n_1} \\
  &amp;\,\,\,\vdots \\
 x &amp;\equiv a_k \pmod{n_k},
\end{align}&lt;/math&gt;
and any two such ''x'' are congruent modulo ''N''.&lt;ref&gt;{{harvnb|Ireland|Rosen|1990|page=34}}&lt;/ref&gt;

In [[abstract algebra]], the theorem is often restated as: if the ''n''&lt;sub&gt;''i''&lt;/sub&gt; are pairwise coprime, the map
:&lt;math&gt;x \bmod N \;\mapsto\;(x \bmod n_1,\, \ldots,\, x \bmod n_k)&lt;/math&gt;
defines a [[ring isomorphism]]&lt;ref&gt;{{harvnb|Ireland|Rosen|1990|page=35}}&lt;/ref&gt;

:&lt;math&gt;\mathbb{Z}/N\mathbb{Z} \cong \mathbb{Z}/n_1\mathbb{Z} \times \cdots \times \mathbb{Z}/n_k\mathbb{Z}&lt;/math&gt;
between the [[ring (mathematics)|ring]] of [[integers modulo n|integers modulo ''N'']] and the [[direct product]] of the rings of integers modulo the ''n''&lt;sub&gt;''i''&lt;/sub&gt;. This means that for doing a sequence of arithmetic operations in &lt;math&gt;\mathbb{Z}/N\mathbb{Z},&lt;/math&gt; one may do the same computation independently in each &lt;math&gt;\mathbb{Z}/n_i\mathbb{Z}&lt;/math&gt; and then get the result by applying the isomorphism (from the right to the left). This may be much faster than the direct computation if ''N'' and the number of operations are large. This is widely used, under the name ''multi-modular computation'', for [[linear algebra]] over the integers or the [[rational number]]s.

The theorem can also be restated in the language of [[combinatorics]] as the fact that the infinite [[arithmetic progression]]s of integers form a [[Helly family]].&lt;ref&gt;{{harvnb|Duchet|1995}}&lt;/ref&gt;

==Proof==
The existence and the uniqueness of the solution may be proven independently. However, the first proof of existence, given below, uses this uniqueness.

===Uniqueness===
Suppose that {{mvar|x}} and {{mvar|y}} are both solutions to all the congruences. As {{mvar|x}} and {{mvar|y}} give the same remainder, when divided by {{math|''n&lt;sub&gt;i&lt;/sub&gt;''}}, their difference {{math|''x'' − ''y''}} is a multiple of each {{math|''n&lt;sub&gt;i&lt;/sub&gt;''}}. As the {{math|''n&lt;sub&gt;i&lt;/sub&gt;''}} are pairwise coprime, their product {{math|''N''}} divides also {{math|''x'' − ''y''}}, and thus {{mvar|x}} and {{mvar|y}} are congruent modulo {{math|''N''}}. If {{mvar|x}} and {{mvar|y}}  are supposed to be non negative and less than {{math|''N''}} (as in the first statement of the theorem), then their difference may be a multiple of {{math|''N''}} only if {{math|1=''x'' = ''y''}}.

===Existence (first proof)===
The map
:&lt;math&gt;x \bmod N \mapsto (x \bmod n_1, \ldots, x\bmod n_k)&lt;/math&gt;
maps congruence classes modulo {{math|''N''}} to sequences of congruence classes modulo {{math|''n&lt;sub&gt;i&lt;/sub&gt;''}}. The proof of uniqueness shows that this map is [[injective]]. As the [[domain of a function|domain]] and the [[codomain]] of this map have the same number of elements, the map is also [[surjective]], which proves the existence of the solution.

This proof is very simple but does not provide any direct way for computing a solution. Moreover, it cannot be generalized to other situations where the following proof can.

===Existence (constructive proof)===
Existence may be established by an explicit construction of {{mvar|x}}.&lt;ref&gt;{{harvnb|Rosen|1993|page=136}}&lt;/ref&gt; This construction may be split into two steps, firstly by solving the problem in the case of two moduli, and the second one by extending this solution to the general case by [[mathematical induction|induction]] on the number of moduli.

====Case of two moduli====
We want to solve the system:
:&lt;math&gt;
\begin{align}
  x &amp;\equiv a_1 \pmod {n_1}\\
  x &amp;\equiv a_2 \pmod {n_2},
\end{align}
&lt;/math&gt;
where &lt;math&gt;n_1&lt;/math&gt; and &lt;math&gt;n_2&lt;/math&gt; are coprime.

[[Bézout's identity]] asserts the existence of two integers &lt;math&gt;m_1&lt;/math&gt; and &lt;math&gt;m_2&lt;/math&gt; such that 
:&lt;math&gt;m_1n_1+m_2n_2=1.&lt;/math&gt;
The integers &lt;math&gt;m_1&lt;/math&gt; and &lt;math&gt;m_2&lt;/math&gt; may be computed by the [[extended Euclidean algorithm]].

A solution is given by
:&lt;math&gt;x = a_1m_2n_2+a_2m_1n_1.&lt;/math&gt;
Indeed, 
:&lt;math&gt;\begin{align}
x&amp;=a_1m_2n_2+a_2m_1n_1\\
&amp;=a_1(1 - m_1n_1) + a_2m_1n_1 \\
&amp;=a_1 + (a_2 - a_1)m_1n_1,
\end{align}&lt;/math&gt;
implying that &lt;math&gt;x \equiv a_1 \pmod {n_1}.&lt;/math&gt; The second congruence is proved similarly.

====General case====
Consider a sequence of congruence equations:
:&lt;math&gt;
\begin{align} 
  x &amp;\equiv a_1 \pmod{n_1} \\ 
  &amp;\vdots              \\ 
  x &amp;\equiv a_k \pmod{n_k},
\end{align}
&lt;/math&gt;
where the &lt;math&gt;n_i&lt;/math&gt; are pairwise coprime. The two first equations have a solution &lt;math&gt;a_{1,2}&lt;/math&gt; provided by the method of the previous section. The set of the solutions of these two first equations is the set of all solutions of the equation
:&lt;math&gt;x \equiv a_{1,2} \pmod{n_1n_2}.&lt;/math&gt;

As the other &lt;math&gt;n_i&lt;/math&gt; are coprime with &lt;math&gt;n_1n_2,&lt;/math&gt; this reduces solving the initial problem of {{mvar|k}} equations to a similar problem with &lt;math&gt;k-1&lt;/math&gt; equations. Iterating the process, one gets eventually the solutions of the initial problem.

===Existence (direct construction)===
For constructing a solution, it is not necessary to make an induction on the number of moduli. However, such a direct construction involves more computation with large numbers, which makes it less efficient and less used. Nevertheless, [[Lagrange interpolation]] is a special case of this construction, applied to polynomials instead of integers.

Let &lt;math&gt;N_i = N/n_i&lt;/math&gt; be the product of all moduli but one. As the &lt;math&gt;n_i&lt;/math&gt; are pairwise coprime, &lt;math&gt;N_i&lt;/math&gt; and &lt;math&gt;n_i&lt;/math&gt; are coprime. Thus [[Bézout's identity]] applies, and there exist integers &lt;math&gt;M_i&lt;/math&gt; and &lt;math&gt;m_i&lt;/math&gt; such that
:&lt;math&gt;M_iN_i + m_in_i=1.&lt;/math&gt;

A solution of the system of congruences is
:&lt;math&gt;x=\sum_{i=1}^k a_iM_iN_i.&lt;/math&gt;
In fact, as &lt;math&gt;N_j&lt;/math&gt; is a multiple of &lt;math&gt;n_i&lt;/math&gt; for &lt;math&gt;i\neq j,&lt;/math&gt;
we have
:&lt;math&gt;x \equiv a_iM_iN_i \equiv a_i(1-m_in_i) \equiv a_i \pmod{n_i}, &lt;/math&gt;
for every &lt;math&gt;i.&lt;/math&gt;

==Computation==
Consider a system of congruences:
:&lt;math&gt;
\begin{align} 
 x &amp;\equiv a_1  \pmod{n_1} \\
 &amp;\vdots             \\ 
 x &amp;\equiv a_k \pmod{n_k}, \\ 
\end{align}
&lt;/math&gt;
where the &lt;math&gt;n_i&lt;/math&gt; are pairwise [[coprime]], and let &lt;math&gt;N=n_1 n_2\cdots n_k.&lt;/math&gt; In this section several methods are described for computing the unique solution for &lt;math&gt;x&lt;/math&gt;, such that &lt;math&gt;0\le x&lt;N,&lt;/math&gt; and these methods are applied on the example:
:&lt;math&gt;
\begin{align}
 x &amp;\equiv 0 \pmod 3 \\
 x &amp;\equiv 3 \pmod 4 \\
 x &amp;\equiv 4 \pmod 5.
\end{align}
&lt;/math&gt;

===Systematic search===
It is easy to check whether a value of {{mvar|x}} is a solution: it suffices to compute the remainder of the [[Euclidean division]] of {{mvar|x}} by each {{math|''n''&lt;sub&gt;''i''&lt;/sub&gt;}}. Thus, to find the solution, it suffices to check successively the integers from {{math|0}} to {{mvar|N}} until finding the solution.

Although very simple this method is very inefficient: for the simple example considered here, {{math|40}} integers (including {{math|0}}) have to be checked for finding the solution, which is {{math|39}}. This is an [[exponential time]] algorithm, as the size of the input is, up to a constant factor, the number of digits of {{mvar|N}}, and the average number of operations is of the order of {{mvar|N}}.

Therefore, this method is rarely used, neither for hand-written computation nor on computers.

===Search by sieving===
The search of the solution may be made dramatically faster by sieving. For this method, we suppose, without loss of generality, that &lt;math&gt;0\le a_i &lt;n_i&lt;/math&gt; (if it were not the case, it would suffice to replace each &lt;math&gt;a_i&lt;/math&gt; by the remainder of its division by &lt;math&gt;n_i&lt;/math&gt;). This implies that the solution belongs to the [[arithmetic progression]]
:&lt;math&gt;a_1, a_1 + n_1, a_1+2n_1, \ldots&lt;/math&gt;
By testing the values of these numbers modulo &lt;math&gt;n_2,&lt;/math&gt; one eventually finds a solution &lt;math&gt;x_2&lt;/math&gt; of the two first congruences. Then the solution belongs to the arithmetic progression 
:&lt;math&gt;x_2, x_2 + n_1n_2, x_2+2n_1n_2, \ldots&lt;/math&gt;
Testing the values of these numbers modulo &lt;math&gt;n_3,&lt;/math&gt;, and continuing until every modulus has been tested gives eventually the solution.

This method is faster if the moduli have been ordered by decreasing value, that is if &lt;math&gt;n_1&gt;n_2&gt; \cdots &gt; n_k.&lt;/math&gt; For the example, this gives the following computation. We consider first the numbers that are congruent to 4 modulo 5 (the largest modulus), which are 4, {{nowrap|1=9 = 4 + 5}}, {{nowrap|1=14 = 9 + 5}}, ... For each of them, compute the remainder by 4 (the second largest modulus) until getting a number congruent to 3 modulo 4. Then one can proceed  by adding {{nowrap|1=20 = 5×4}} at each step, and computing only the remainders by 3. This gives
:4 mod 4 → 0. Continue
:4 + 5 = 9 mod 4 →1.  Continue
:9 + 5 = 14 mod 4 → 2. Continue
:14 + 5 = 19 mod 4 → 3. OK, continue by considering remainders modulo 3 and adding 5×4 = 20 each time
:19 mod 3 → 1. Continue
:19 + 20 = 39 mod 3 → 0. OK, this is the result.

This method works well for hand-written computation with a product of moduli that is not too big. However, it is much slower than other methods, for very large products of moduli. Although dramatically faster than the systematic search, this method also has an [[exponential time]] complexity and is therefore not used on computers.

===Using the existence construction===
The [[#Existence (constructive proof)|constructive existence proof]] shows that, in the [[#Case of two moduli|case of two moduli]], the solution may be obtained by the computation of the [[Bézout coefficients]] of the moduli, followed by a few multiplications, additions and reductions modulo &lt;math&gt;n_1n_2&lt;/math&gt; (for getting a result in the interval &lt;math&gt;(0, n_1n_2-1)&lt;/math&gt;). As the Bézout's coefficients may be computed with the [[extended Euclidean algorithm]], the whole computation, at most, has a quadratic [[time complexity]] of &lt;math&gt;O((s_1+s_2)^2),&lt;/math&gt; where &lt;math&gt;s_i&lt;/math&gt; denotes the number of digits of &lt;math&gt;n_i.&lt;/math&gt;

For more than two moduli, the method for two moduli allows the replacement of any two congruences by a single congruence modulo the product of the moduli. Iterating this process provides eventually the solution with a complexity, which is quadratic in the number of digits of the product of all moduli. This quadratic time complexity does not depend on the order in which the moduli are regrouped. One may regroup the two first moduli, then regroup the resulting modulus with the next one, and so on. This strategy is the easiest to implement, but it also requires more computation involving large numbers.

Another strategy consists in partitioning the moduli in pairs whose product have comparable sizes (as much as possible), applying, in parallel, the method of two moduli to each pair, and iterating with a number of moduli approximatively divided by two. This method allows an easy parallelization of the algorithm. Also, if fast algorithms (that is algorithms working in [[quasilinear time]]) are used for the basic operations, this method provides an algorithm for the whole computation that works in quasilinear time.

On the current example (which has only three moduli), both strategies are identical and work as follows.

[[Bézout's identity]] for 3 and 4 is
:&lt;math&gt;1\times 4 + (-1)\times 3 = 1.&lt;/math&gt;
Putting this in the formula given for proving the existence gives 
:&lt;math&gt;0\times 4 + (-3)\times 3 =-9&lt;/math&gt;
for a solution of the two first congruences, the other solutions being obtained by adding to −9 any multiple of {{nowrap|1= 3×4 = 12}}. One may continue with any of these solutions, but the solution {{nowrap|1=3 = −9 +12}} is smaller (in absolute value) and thus leads probably to an easier computation

Bézout identity for 5 and 3×4 = 12 is
:&lt;math&gt;5\times 5 +(-2)\times 12 =1.&lt;/math&gt;
Applying the same formula again, we get a solution of the problem:
:&lt;math&gt;25\times 3 -24\times 4 = -21.&lt;/math&gt;
The other solutions are obtained by adding any multiple of {{nowrap|1=3×4×5 = 60}}, and the smallest positive solution is {{nowrap|1=−21 + 60 = 39}}.

===As a linear Diophantine system===
The system of congruences solved by the Chinese remainder theorem may be rewritten as a [[Diophantine equation#System of linear Diophantine equations|system of simultaneous linear Diophantine equations]]:
:&lt;math&gt;
\begin{align} 
 x &amp;= a_1 +x_1n_1\\ 
 &amp;\vdots   \\ 
 x &amp;=a_k+x_kn_k, 
\end{align}
&lt;/math&gt;
where the unknown integers are &lt;math&gt;x&lt;/math&gt; and the &lt;math&gt;x_i.&lt;/math&gt; Therefore, every general method for solving such systems may be used for finding the solution of Chinese remainder theorem, such as the reduction of the matrix of the system to [[Smith normal form]] or [[Hermite normal form]]. However, as usual when using a general algorithm for a more specific problem, this approach is less efficient than the method of the preceding section, based on a direct use of [[Bézout's identity]].

==Over principal ideal domains==
In {{slink||Theorem statement}}, the Chinese remainder theorem has been stated in three different ways: in terms of remainders, of congruences, and of a ring isomorphism. The statement in terms of remainders does not apply, in general, to [[principal ideal domain]]s, as remainders are not defined in such rings. However, the two other versions make sense over a principal ideal domain {{math|''R''}}: it suffices to replace &quot;integer&quot; by &quot;element of the domain&quot; and &lt;math&gt;\mathbb Z&lt;/math&gt; by  {{math|''R''}}. These two versions of the theorem are true in this context, because the proofs (except for the first existence proof), are based on [[Euclid's lemma]] and [[Bézout's identity]], which are true over every principal domain.

However, in general, the theorem is only an existence theorem and does not provide any way for computing the solution, unless one has an algorithm for computing the coefficients of Bézout's identity.

==Over univariate polynomial rings and Euclidean domains==
The statement in terms of remainders given in {{slink||Theorem statement}} cannot be generalized to any principal ideal domain, but its generalization to [[Euclidean domain]]s is straightforward. The [[univariate polynomial]]s over a [[field (mathematics)|field]] is the typical example of a Euclidean domain, which is not the integers. Therefore, we state the theorem for the case of a ring of univariate domain &lt;math&gt;R=K[X]&lt;/math&gt; over a field &lt;math&gt;K.&lt;/math&gt; For getting the theorem for a general Euclidean domain, it suffices to replace the degree by the [[Euclidean function]] of the Euclidean domain.

The Chinese remainder theorem for polynomials is thus: Let &lt;math&gt;P_i(X)&lt;/math&gt; (the moduli) be,  for {{math|1=''i''=1, ..., ''k''}}, [[pairwise coprime]] polynomials in &lt;math&gt;R=K[X]&lt;/math&gt;. Let &lt;math&gt;d_i =\deg P_i&lt;/math&gt; be the degree of &lt;math&gt;P_i(X)&lt;/math&gt;, and &lt;math&gt;D&lt;/math&gt; be the sum of the &lt;math&gt;d_i.&lt;/math&gt;
If &lt;math&gt;A_i(X), \ldots,A_k(X)&lt;/math&gt; are polynomials such that &lt;math&gt;A_i(X)=0&lt;/math&gt; or &lt;math&gt;\deg A_i&lt;d_i&lt;/math&gt; for every {{math|''i''}}, then, there is one and only one polynomial &lt;math&gt;P(X)&lt;/math&gt;, such that &lt;math&gt;\deg P&lt;D&lt;/math&gt; and the remainder of the [[Euclidean division]] of &lt;math&gt;P(X)&lt;/math&gt; by &lt;math&gt;P_i(X)&lt;/math&gt; is &lt;math&gt;A_i(X)&lt;/math&gt; for every {{math|''i''}}.

The construction of the solution may be done as in {{slink||Existence (constructive proof)}} or {{slink||Existence (direct proof)}}. However, the latter construction may be simplified by using, as follows, [[partial fraction decomposition]] instead of [[extended Euclidean algorithm]].

Thus, we want to find a polynomial &lt;math&gt;P(X)&lt;/math&gt;, which satisfies the congruences
:&lt;math&gt;P(X)\equiv A_i(X) \pmod {P_i(X)},&lt;/math&gt;
for &lt;math&gt;i=1,\ldots,k.&lt;/math&gt;

Consider the polynomials
:&lt;math&gt;\begin{align}
    Q(X) &amp;= \prod_{i=1}^{k}P_i(X) \\
  Q_i(X) &amp;= \frac{Q(X)}{P_i(X)}.
\end{align}&lt;/math&gt;

The partial fraction decomposition of &lt;math&gt;1/Q(X)&lt;/math&gt; gives {{mvar|k}} polynomials &lt;math&gt;S_i(X)&lt;/math&gt; with degrees &lt;math&gt;\deg S_i(X) &lt; d_i,&lt;/math&gt; such that
:&lt;math&gt;\frac{1}{Q(X)} = \sum_{i=1}^k \frac{S_i(X)}{P_i(X)},&lt;/math&gt;
and thus
:&lt;math&gt;1 = \sum_{i=1}^{k}S_i(X) Q_i(X).&lt;/math&gt;

Then a solution of the simultaneous congruence system is given by the polynomial
:&lt;math&gt;\sum_{i=1}^k A_i(X) S_i(X) Q_i(X).&lt;/math&gt;

In fact, we have
: &lt;math&gt;\sum_{i=1}^k A_i(X) S_i(X) Q_i(X)= A_i(X)+ \sum_{j=1}^{k}(A_j(X) - A_i(X)) S_j(X) Q_j(X) \equiv A_i(X)\pmod{P_i(X)},&lt;/math&gt;
for &lt;math&gt;1 \leq i \leq k.&lt;/math&gt;

This solution may have a degree larger that &lt;math&gt;D=\sum_{i=1}^k d_i.&lt;/math&gt; The unique solution of degree less than &lt;math&gt;D&lt;/math&gt; may be deduced by considering the remainder &lt;math&gt;B_i(X)&lt;/math&gt; of the Euclidean division of &lt;math&gt;A_i(X)S_i(X)&lt;/math&gt; by &lt;math&gt;P_i(X).&lt;/math&gt; This solution is 
:&lt;math&gt;P(X)=\sum_{i=1}^k B_i(X) Q_i(X).&lt;/math&gt;

===Lagrange interpolation===
A special case of Chinese remainder theorem for polynomials is [[Lagrange interpolation]]. For this, consider {{mvar|k}} [[monic polynomial]]s of degree one:

:&lt;math&gt;P_i(X)=X-x_i.&lt;/math&gt;

They are pairwise coprime if the &lt;math&gt;x_i&lt;/math&gt; are all different. The remainder of the division by &lt;math&gt;P_i(X)&lt;/math&gt; of a polynomial &lt;math&gt;P(X)&lt;/math&gt; is &lt;math&gt;P(x_i).&lt;/math&gt;

Now, let &lt;math&gt;A_1, \ldots, A_k&lt;/math&gt; be constants (polynomials of degree 0) in &lt;math&gt;K.&lt;/math&gt; Both Lagrange interpolation and Chinese remainder theorem assert the existence of a unique polynomial &lt;math&gt;P(X),&lt;/math&gt; of degree less than &lt;math&gt;k&lt;/math&gt; such that

:&lt;math&gt;P(x_i)=A_i,&lt;/math&gt;

for every &lt;math&gt;i.&lt;/math&gt;

Lagrange interpolation formula is exactly the result, in this case, of the above construction of the solution. More precisely, let 

:&lt;math&gt;\begin{align}
  Q(X)  &amp;= \prod_{i=1}^{k}(X-x_i) \\[6pt]
 Q_i(X) &amp;= \frac{Q(X)}{X-x_i}.
\end{align}&lt;/math&gt;

The [[partial fraction decomposition]] of &lt;math&gt;\frac{1}{Q(X)}&lt;/math&gt; is 

:&lt;math&gt;\frac{1}{Q(X)} = \sum_{i=1}^k \frac{1}{Q_i(x_i)(X-X_i)}.&lt;/math&gt;

In fact, reducing the right-hand side to a common denominator one gets 

:&lt;math&gt; \sum_{i=1}^k \frac{1}{Q_i(x_i)(X-X_i)}= \frac{1}{Q(X)} \sum_{i=1}^k \frac{Q_i(X)}{Q_i(x_i)},&lt;/math&gt;

and the numerator is equal to one, as being a polynomial of degree less than &lt;math&gt;k,&lt;/math&gt; which takes the value one for &lt;math&gt;k&lt;/math&gt; different values of &lt;math&gt;X.&lt;/math&gt;

Using the above general formula, we get the Lagrange interpolation formula:

:&lt;math&gt;P(X)=\sum_{i=1}^k A_i\frac{Q_i(X)}{Q_i(x_i)}.&lt;/math&gt;

===Hermite interpolation===
[[Hermite interpolation]] is an application of the Chinese remainder theorem for univariate polynomials, which may involve moduli of arbitrary degrees (Lagrange interpolation involves only moduli of degree one).

The problem consists of finding a polynomial of the least possible degree, such that the polynomial and its first derivatives take given values at some fixed points.

More precisely, let &lt;math&gt;x_1, \ldots, x_k&lt;/math&gt; be &lt;math&gt;k&lt;/math&gt; elements of the ground [[field (mathematics)|field]] &lt;math&gt;K,&lt;/math&gt; and, for &lt;math&gt;i=1,\ldots, k,&lt;/math&gt; let &lt;math&gt;a_{i,0}, a_{i,1}, \ldots, a_{i,r_i-1}&lt;/math&gt; be the values of the first &lt;math&gt;r_i&lt;/math&gt; derivatives of the sought polynomial at &lt;math&gt;x_i&lt;/math&gt; (including the 0th derivative, which is the value of the polynomial itself). The problem is to find a polynomial &lt;math&gt;P(X)&lt;/math&gt; such that its ''j''th derivative takes the value &lt;math&gt;a_{i,j} &lt;/math&gt; at &lt;math&gt;x_i,&lt;/math&gt; for &lt;math&gt;i=1,\ldots,k&lt;/math&gt; and &lt;math&gt;j=0,\ldots,r_j.&lt;/math&gt;

Consider the polynomial
:&lt;math&gt;P_i(X) = \sum_{j=0}^{r_i - 1}\frac{a_{i,j}}{j!}(X - x_i)^j.&lt;/math&gt;
This is the Taylor polynomial   of order &lt;math&gt;r_i-1&lt;/math&gt; at &lt;math&gt;x_i&lt;/math&gt;, of the unknown polynomial &lt;math&gt;P(X).&lt;/math&gt; Therefore, we must have
:&lt;math&gt;P(X)\equiv P_i(X) \pmod {(X-x_i)^{r_i}}.&lt;/math&gt;

Conversely, any polynomial &lt;math&gt;P(X) &lt;/math&gt; that satisfies these &lt;math&gt;k&lt;/math&gt; congruences, in particular verifies, for any &lt;math&gt;i=1, \ldots, k&lt;/math&gt;
:&lt;math&gt;P(X)= P_i(X) +o(X-x_i)^{r_i-1} &lt;/math&gt; 
therefore &lt;math&gt;P_i(X)&lt;/math&gt; is its Taylor polynomial of order &lt;math&gt; r_i - 1&lt;/math&gt; at &lt;math&gt;x_i&lt;/math&gt;, that is, &lt;math&gt;P(X)&lt;/math&gt; solves the initial Hermite interpolation problem.
The Chinese remainder theorem asserts that there exists exactly one polynomial of degree less than the sum of the &lt;math&gt;r_i,&lt;/math&gt; which satisfies these &lt;math&gt;k&lt;/math&gt; congruences.

There are several ways for computing the solution &lt;math&gt;P(X).&lt;/math&gt; One may use the method described at the beginning of {{slink||Over univariate polynomial rings and Euclidean domains}}. One may also use the constructions given in {{slink||Existence (constructive proof)}} or {{slink||Existence (direct proof)}}.

==Generalization to non-coprime moduli==
The Chinese remainder theorem can be generalized to non-coprime moduli. Let &lt;math&gt;m, n, a, b&lt;/math&gt; be any integers, let &lt;math&gt;g = \gcd(m,n)&lt;/math&gt;, and consider the system of congruences:
:&lt;math&gt;
\begin{align}
x &amp;\equiv a \pmod m \\
x &amp;\equiv b \pmod n,
\end{align}
&lt;/math&gt;
If &lt;math&gt;a \equiv b \pmod g&lt;/math&gt;, then this system of equations has a unique solution modulo &lt;math&gt;\operatorname{lcm}(m,n) = mn/g&lt;/math&gt;. Otherwise, it has no solutions.

If we use [[Bézout's identity]] to write &lt;math&gt;g = um + vn&lt;/math&gt;, then the solution is
:&lt;math&gt; x = \frac{avn+bum}{g}.&lt;/math&gt;
This defines an integer, as {{mvar|g}} divides both {{mvar|m}} and {{mvar|n}}. Otherwise, the proof is very similar to that for coprime moduli.

==Generalization to arbitrary rings==
The Chinese remainder theorem can be generalized to any [[ring (mathematics)|ring]], by using [[Coprime integers#Coprimality in ring ideals|coprime ideal]]s (also called [[Ideal (ring theory)#Types of ideals|comaximal ideals]]). Two ideals {{mvar|I}} and {{mvar|J}} are coprime if there are elements &lt;math&gt;i\in I&lt;/math&gt; and &lt;math&gt;j\in J&lt;/math&gt; such that &lt;math&gt;i+j=1.&lt;/math&gt; This relation plays the role of [[Bézout's identity]] in the proofs related to this generalization, which, otherwise are very similar. The generalization may be stated as follows.&lt;ref&gt;{{harvnb|Ireland|Rosen|1990|page=181}}&lt;/ref&gt;

Let {{math|''I''&lt;sub&gt;1&lt;/sub&gt;, ..., ''I&lt;sub&gt;k&lt;/sub&gt;''}} be [[two-sided ideal]]s of a ring &lt;math&gt;R&lt;/math&gt; and let {{math|''I''}} be their intersection. If the ideals are pairwise coprime, we have the [[ring homomorphism|isomorphism]]: 
:&lt;math&gt;\begin{align}
    R/I &amp;\to R/I_1 \times \cdots \times R/I_k \\
  x \bmod I &amp;\mapsto (x \bmod I_1,\, \ldots,\, x \bmod I_k),
\end{align}&lt;/math&gt;
between the [[quotient ring]] &lt;math&gt;R/I&lt;/math&gt; and the [[direct product of rings|direct product]] of the &lt;math&gt;R/I_i,&lt;/math&gt;
where &quot;&lt;math&gt;x \bmod I&lt;/math&gt;&quot; denotes the image of the element &lt;math&gt;x&lt;/math&gt; in the quotient ring defined by the ideal &lt;math&gt;I.&lt;/math&gt;
Moreover, if &lt;math&gt;R&lt;/math&gt; is [[commutative ring|commutative]], then the ideal intersection of pairwise coprime ideals is equal to their [[product of ideals|product]]; that is
:&lt;math&gt;
I= I_1\cap I_2 \cap\cdots\cap I_k= I_1I_2\cdots I_k,
&lt;/math&gt;
if {{mvar|I{{sub|i}}}}  and {{mvar|I{{sub|j}}}} are coprime for {{math|''i'' ≠ ''j''}}.

==Applications==

===Sequence numbering===
The Chinese remainder theorem has been used to construct a [[Gödel numbering for sequences]], which is involved in the proof of [[Gödel's incompleteness theorems]].

===Fast Fourier transform===
The [[prime-factor FFT algorithm]] (also called Good-Thomas algorithm) uses the Chinese remainder theorem for reducing the computation of a [[fast Fourier transform]] of size &lt;math&gt;n_1n_2&lt;/math&gt; to the computation of two fast Fourier transforms of smaller sizes &lt;math&gt;n_1&lt;/math&gt; and &lt;math&gt;n_2&lt;/math&gt; (providing that &lt;math&gt;n_1&lt;/math&gt; and &lt;math&gt;n_2&lt;/math&gt; are coprime).

===Encryption===
Most [[RSA (cryptosystem)#Using the Chinese remainder algorithm|implementations of RSA use the Chinese remainder theorem]] during signing of [[HTTPS]] certificates and during decryption.

The Chinese remainder theorem can also be used in [[secret sharing]], which consists of distributing a set of shares among a group of people who, all together (but no one alone), can recover a certain secret from the given set of shares. Each of the shares is represented in a congruence, and the solution of the system of congruences using the Chinese remainder theorem is the secret to be recovered. [[Secret sharing using the Chinese remainder theorem]] uses, along with the Chinese remainder theorem, special sequences of integers that guarantee the impossibility of recovering the secret from a set of shares with less than a certain [[cardinality]].

===Range ambiguity resolution===
{{main article | range ambiguity resolution }}

The [[range ambiguity resolution]] techniques used with [[medium pulse repetition frequency]] radar can be seen as a special case of the Chinese remainder theorem.

===Dedekind's theorem===
'''Dedekind's theorem on the linear independence of characters.''' Let {{mvar|M}} be a [[monoid]] and {{mvar|k}} an [[integral domain]], viewed as a monoid by considering the multiplication on {{mvar|k}}. Then any finite family {{math|(&amp;nbsp;''f&lt;sub&gt;i&lt;/sub&gt;''&amp;nbsp;)&lt;sub&gt;''i''∈''I''&lt;/sub&gt;}} of distinct monoid homomorphisms {{math|&amp;nbsp;''f&lt;sub&gt;i&lt;/sub&gt;'' : ''M'' → ''k''}} is linearly independent. In other words, every family {{math|(''α&lt;sub&gt;i&lt;/sub&gt;'')&lt;sub&gt;''i''∈''I''&lt;/sub&gt;}} of elements {{math|''α&lt;sub&gt;i&lt;/sub&gt;'' ∈ ''k''}} satisfying 
:&lt;math&gt;\sum_{i \in I}\alpha_i f_i = 0&lt;/math&gt;

must be equal to the family {{math|(0)&lt;sub&gt;''i''∈''I''&lt;/sub&gt;}}.

'''Proof.''' First assume that {{mvar|k}} is a field, otherwise, replace the integral domain {{mvar|k}} by its quotient field, and nothing will change. We can linearly extend the monoid homomorphisms {{math|&amp;nbsp;''f&lt;sub&gt;i&lt;/sub&gt;'' : ''M'' → ''k''}} to {{mvar|k}}-algebra homomorphisms {{math|''F&lt;sub&gt;i&lt;/sub&gt;'' : ''k''[''M''] → ''k''}}, where {{math|''k''[''M'']}} is the [[monoid ring]] of {{mvar|M}} over {{mvar|k}}. Then, by linearity, the condition
:&lt;math&gt;\sum_{i\in I}\alpha_i f_i = 0,&lt;/math&gt;

yields
:&lt;math&gt;\sum_{i \in I}\alpha_i F_i = 0.&lt;/math&gt;

Next, for {{math|''i'', ''j'' ∈ ''I''; ''i'' ≠ ''j''}} the two {{mvar|k}}-linear maps {{math|''F&lt;sub&gt;i&lt;/sub&gt;'' : ''k''[''M''] → ''k''}} and {{math|''F&lt;sub&gt;j&lt;/sub&gt;'' : ''k''[''M''] → ''k''}} are not proportional to each other. Otherwise {{math|&amp;nbsp;''f&lt;sub&gt;i&lt;/sub&gt;''&amp;nbsp;}} and {{math|&amp;nbsp;''f&lt;sub&gt;j&lt;/sub&gt;''&amp;nbsp;}} would also be proportional, and thus equal since as monoid homomorphisms they satisfy: {{math|&amp;nbsp;''f&lt;sub&gt;i&lt;/sub&gt;''&amp;nbsp;(1) {{=}} 1 {{=}} &amp;nbsp;''f&lt;sub&gt;j&lt;/sub&gt;''&amp;nbsp;(1)}}, which contradicts the assumption that they are distinct.

Therefore, the kernels {{math|Ker ''F&lt;sub&gt;i&lt;/sub&gt;''}} and {{math|Ker ''F&lt;sub&gt;j&lt;/sub&gt;''}} are distinct. Since {{math|''k''[''M'']/Ker ''F&lt;sub&gt;i&lt;/sub&gt;'' ≅ ''F&lt;sub&gt;i&lt;/sub&gt;''(''k''[''M'']) {{=}} ''k''}} is a field, {{math|Ker ''F&lt;sub&gt;i&lt;/sub&gt;''}} is a maximal ideal of {{math|''k''[''M'']}} for every {{math|''i'' ∈ ''I''}}. Because they are distinct and maximal the ideals {{math|Ker ''F&lt;sub&gt;i&lt;/sub&gt;''}} and {{math|Ker ''F&lt;sub&gt;j&lt;/sub&gt;''}} are coprime whenever {{math|''i'' ≠ ''j''}}. The Chinese Remainder Theorem (for general rings) yields an isomorphism:
:&lt;math&gt;\begin{align}
  \phi: k[M] / K &amp;\to \prod_{i \in I}k[M] / \mathrm{Ker} F_i \\
     \phi(x + K) &amp;= \left(x + \mathrm{Ker} F_i\right)_{i \in I}
\end{align}&lt;/math&gt;

where
:&lt;math&gt;K = \prod_{i \in I}\mathrm{Ker} F_i = \bigcap_{i \in I}\mathrm{Ker} F_i.&lt;/math&gt;

Consequently, the map
:&lt;math&gt;\begin{align}
  \Phi: k[M] &amp;\to \prod_{i \in I}k[M]/ \mathrm{Ker} F_i \\
     \Phi(x) &amp;= \left(x + \mathrm{Ker} F_i\right)_{i \in I}
\end{align}&lt;/math&gt;

is surjective. Under the isomorphisms {{math|''k''[''M'']/Ker ''F&lt;sub&gt;i&lt;/sub&gt;'' → ''F&lt;sub&gt;i&lt;/sub&gt;''(''k''[''M'']) {{=}} ''k'',}} the map {{math|Φ}} corresponds to:
:&lt;math&gt;\begin{align}
  \psi: k[M] &amp;\to \prod_{i \in I}k \\
     \psi(x) &amp;= \left[F_i(x)\right]_{i \in I}
\end{align}&lt;/math&gt;

Now,
:&lt;math&gt;\sum_{i \in I}\alpha_i F_i = 0&lt;/math&gt;

yields
:&lt;math&gt;\sum_{i \in I}\alpha_i u_i = 0&lt;/math&gt;

for every vector {{math|(''u&lt;sub&gt;i&lt;/sub&gt;'')&lt;sub&gt;''i''∈''I''&lt;/sub&gt;}} in the image of the map {{mvar|ψ}}. Since {{mvar|ψ}} is surjective, this means that
:&lt;math&gt;\sum_{i \in I}\alpha_i u_i = 0&lt;/math&gt;

for every vector
:&lt;math&gt;\left(u_i\right)_{i \in I} \in \prod_{i \in I}k.&lt;/math&gt;

Consequently, {{math|(''α&lt;sub&gt;i&lt;/sub&gt;'')&lt;sub&gt;''i''∈''I''&lt;/sub&gt; {{=}} (0)&lt;sub&gt;''i''∈''I''&lt;/sub&gt;}}. QED.

==See also==
* [[Covering system]]
* [[Hasse principle]]
* [[Residue number system]]

==Notes==
{{Reflist}}

==References==
*{{citation|first=Joseph W.|last=Dauben|editor-last=Katz|editor-first=Victor J.|contribution=Chapter 3: Chinese Mathematics|pages=187–384|publisher=Princeton University Press|year=2007|title=The Mathematics of Egypt, Mesopotamia, China, India and Islam : A Sourcebook|isbn=978-0-691-11485-9}}
*{{citation |title=Elements of the Theory of Numbers |first1=Joseph B. |last1=Dence |first2=Thomas P. |last2=Dence |publisher=Academic Press |date=1999 |url=https://books.google.com/books?id=YiYHw7evhjkC&amp;pg=PA156 |isbn=9780122091308}}
*{{citation
 | last = Duchet
 | first = Pierre
 | editor1-last = Graham | editor1-first = R. L.
 | editor2-last = Grötschel | editor2-first = M. | editor2-link = Martin Grötschel
 | editor3-last = Lovász | editor3-first = L.
 | contribution = Hypergraphs
 | location = Amsterdam
 | mr = 1373663
 | pages = 381–432
 | publisher = Elsevier
 | title = Handbook of combinatorics, Vol. 1, 2
 | year = 1995
}}. See in particular Section 2.5, &quot;Helly Property&quot;, [https://books.google.com/books?id=5Y9NCwlx63IC&amp;pg=PA393 pp.&amp;nbsp;393–394].
* {{citation
 | last1 = Gauss  | first1 = Carl Friedrich
 | translator-last = Clarke | translator-first = Arthur A.
 | title = Disquisitiones Arithemeticae
 | edition = Second, corrected
 | publisher = [[Springer Science+Business Media|Springer]]
 | location = New York
 | year = 1986
 | isbn = 978-0-387-96254-2
 | url = https://www.springer.com/mathematics/algebra/book/978-0-387-96254-2
}}
*{{citation|first1=Kenneth|last1=Ireland|first2=Michael|last2=Rosen|title=A Classical Introduction to Modern Number Theory|edition=2nd|publisher=Springer-Verlag|year=1990|isbn=0-387-97329-X}} 
*{{citation
 | last = Kak
 | first = Subhash
 | authorlink = Subhash Kak
 | issue = 1
 | journal = Indian Journal of History of Science
 | pages = 62–71
 | title = Computational aspects of the Aryabhata algorithm
 | url = http://www.ece.lsu.edu/kak/AryabhataAlgorithm.pdf
 | volume = 21
 | year = 1986
}}
*{{citation|first=Victor J.|last=Katz|title=A History of Mathematics / An Introduction|edition=2nd|year=1998|publisher=Addison Wesley Longman|isbn=978-0-321-01618-8|url-access=registration|url=https://archive.org/details/historyofmathema00katz}}
*{{citation |first=Ulrich |last=Libbrecht |title=Chinese Mathematics in the Thirteenth Century: the &quot;Shu-shu Chiu-chang&quot; of Ch'in Chiu-shao |publisher=Dover Publications Inc |isbn=978-0-486-44619-6 |date=1973}}
*{{citation|first=Oystein|last=Ore|title=Number Theory and Its History|year=1988|origyear=1948|publisher=Dover|isbn=978-0-486-65620-5|url-access=registration|url=https://archive.org/details/numbertheoryitsh0000orey}}
*{{citation |title=Fibonacci's Liber Abaci |last1=Pisano |first1=Leonardo |author-link1 = Leonardo Pisano |translator-last=Sigler |translator-first=Laurence E. |publisher=Springer-Verlag |year=2002 |isbn=0-387-95419-8 |url=https://www.springer.com/mathematics/book/978-0-387-40737-1 |pages=402–403}}
*{{citation|first=Kenneth H.|last=Rosen|title=Elementary Number Theory and its Applications|edition=3rd|year=1993|publisher=Addison-Wesley|isbn=978-0201-57889-8}}

==Further reading==
*{{citation
 | last1 = Cormen
 | first1 = Thomas H.
 | authorlink1 = Thomas H. Cormen
 | last2 = Leiserson
 | first2 = Charles E.
 | authorlink2 = Charles E. Leiserson
 | last3 = Rivest
 | first3 = Ronald L.
 | authorlink3 = Ronald L. Rivest
 | last4 = Stein
 | first4 = Clifford
 | authorlink4 = Clifford Stein
 | year = 2001
 | title = [[Introduction to Algorithms]]
 | edition = Second
 | publisher = [[MIT Press]] and McGraw-Hill
 | isbn = 0-262-03293-7
}}. See Section 31.5: The Chinese remainder theorem, pp.&amp;nbsp;873–876.
*{{citation
 | title = Chinese Remainder Theorem: Applications in Computing, Coding, Cryptography
 | last1 = Ding
 | first1 = Cunsheng
 | last2 = Pei
 | first2 = Dingyi
 | last3 = Salomaa
 | first3 = Arto
 | publisher = World Scientific Publishing
 | year = 1996
 | isbn = 981-02-2827-9
 | url = https://archive.org/details/chineseremainder0000ding/page/1
 | pages = [https://archive.org/details/chineseremainder0000ding/page/1 1–213]
 }}
*{{citation
 | title = Algebra
 | last = Hungerford
 | first = Thomas W.
 | authorlink = Thomas W. Hungerford
 | publisher = Springer-Verlag
 | series = Graduate Texts in Mathematics, Vol. 73
 | year = 1974
 | isbn = 978-1-4612-6101-8
 | url = https://www.springer.com/mathematics/algebra/book/978-0-387-90518-1
 | pages = 131–132
}}
*{{citation
 | last = Knuth
 | first = Donald
 | authorlink = Donald Knuth
 | year = 1997
 | title = [[The Art of Computer Programming]]
 | volume = Volume 2: ''Seminumerical Algorithms''
 | edition = Third
 | publisher = Addison-Wesley
 | isbn = 0-201-89684-2
}}. See Section 4.3.2 (pp.&amp;nbsp;286–291), exercise 4.6.2–3 (page 456).

==External links==
* {{springer |title = Chinese remainder theorem |id = p/c022120}}
* {{MathWorld |urlname = ChineseRemainderTheorem |title = Chinese Remainder Theorem}}
* {{planetmath |urlname = ChineseRemainderTheorem |title = Chinese Remainder Theorem}}
* [http://ctext.org/sunzi-suan-jing Full text of the Sun-tzu Suan-ching] (Chinese){{snd}} [[Chinese Text Project]]

{{authority control}}
[[Category:Articles containing proofs]]
[[Category:Chinese mathematical discoveries|Sun, Master]]
[[Category:Commutative algebra]]
[[Category:Modular arithmetic]]
[[Category:Theorems in number theory]]</text>
      <sha1>t0pg0nn1db9tx83qe83fon28qdyq6o5</sha1>
    </revision>
  </page>
