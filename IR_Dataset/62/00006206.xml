  <page>
    <title>Computable number</title>
    <ns>0</ns>
    <id>6206</id>
    <revision>
      <id>940132063</id>
      <parentid>940065961</parentid>
      <timestamp>2020-02-10T18:37:38Z</timestamp>
      <contributor>
        <username>Trovatore</username>
        <id>310173</id>
      </contributor>
      <comment>Undid revision 940065961 by [[Special:Contributions/DarkblueFlow|DarkblueFlow]] ([[User talk:DarkblueFlow|talk]]) [[WP:NOTBROKEN]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Use Harvard referencing|date=December 2019}}
[[File:10,000 digits of pi - poster.svg|thumb|[[Pi|π]] can be computed to arbitrary precision.]]
In [[mathematics]], '''computable numbers''' are the [[real numbers]] that can be computed to within any desired precision by a finite, terminating [[algorithm]]. They are also known as the '''recursive numbers''', '''effective numbers''' (vanDerHoeven) or the '''computable reals''' or '''recursive reals'''.{{cn|reason=Give a source for each naming variant.|date=September 2019}}

Equivalent definitions can be given using [[μ-recursive function]]s, [[Turing machines]], or [[lambda calculus|λ-calculus]] as the formal representation of algorithms. The computable numbers form a [[real closed field]] and can be used in the place of real numbers for many, but not all, mathematical purposes.

==Informal definition using a Turing machine as example==
In the following, [[Marvin Minsky]] defines the numbers to be computed in a manner similar to those defined by [[Alan Turing]] in 1936; i.e., as &quot;sequences of digits interpreted as decimal fractions&quot; between 0 and 1:
 
:&quot;A computable number [is] one for which there is a Turing machine which, given ''n'' on its initial tape, terminates with the ''nth'' digit of that number [encoded on its tape].&quot; (Minsky 1967:159)

The key notions in the definition are (1) that some ''n'' is specified at the start, (2) for any ''n'' the computation only takes a finite number of steps, after which the machine produces the desired output and terminates.

An alternate form of (2) – the machine successively prints all n of the digits on its tape, halting after printing the n&lt;sup&gt;th&lt;/sup&gt; – emphasizes Minsky's observation: (3) That by use of a Turing machine, a ''finite'' definition – in the form of the machine's table – is being used to define what is a potentially-''infinite'' string of decimal digits.

This is however not the modern definition which only requires the result be accurate to within any given accuracy. The informal definition above is subject to a rounding problem called the [[table-maker's dilemma]] whereas the modern definition is not.

==Formal definition==
A [[real number]] ''a'' is '''computable''' if it can be approximated by some [[computable function]] &lt;math&gt;f:\mathbb{N}\to\mathbb{Z}&lt;/math&gt; in the following manner: given any positive [[integer]] ''n'', the function produces an integer ''f''(''n'') such that:

:&lt;math&gt;{f(n)-1\over n} \leq a \leq {f(n)+1\over n}.&lt;/math&gt;

There are two similar definitions that are equivalent:
*There exists a computable function which, given any positive rational [[error bound]] &lt;math&gt;\varepsilon&lt;/math&gt;, produces a [[rational number]] ''r'' such that &lt;math&gt;|r - a| \leq \varepsilon.&lt;/math&gt;
*There is a computable sequence of rational numbers &lt;math&gt;q_i&lt;/math&gt; converging to &lt;math&gt;a&lt;/math&gt; such that &lt;math&gt;|q_i - q_{i+1}| &lt; 2^{-i}\,&lt;/math&gt; for each ''i''.

There is another equivalent definition of computable numbers via computable [[Dedekind cut]]s. A '''computable Dedekind cut''' is a computable function &lt;math&gt;D\;&lt;/math&gt; which when provided with a rational number &lt;math&gt;r&lt;/math&gt; as input returns &lt;math&gt;D(r)=\mathrm{true}\;&lt;/math&gt; or &lt;math&gt;D(r)=\mathrm{false}\;&lt;/math&gt;, satisfying the following conditions:
:&lt;math&gt;\exists r D(r)=\mathrm{true}\;&lt;/math&gt;
:&lt;math&gt;\exists r D(r)=\mathrm{false}\;&lt;/math&gt;
:&lt;math&gt;(D(r)=\mathrm{true}) \wedge (D(s)=\mathrm{false}) \Rightarrow r&lt;s\;&lt;/math&gt;
:&lt;math&gt;D(r)=\mathrm{true} \Rightarrow \exist s&gt;r, D(s)=\mathrm{true}.\;&lt;/math&gt;
An example is given by a program ''D'' that defines the [[cube root]] of 3. Assuming &lt;math&gt;q&gt;0\;&lt;/math&gt; this is defined by:
:&lt;math&gt;p^3&lt;3 q^3 \Rightarrow D(p/q)=\mathrm{true}\;&lt;/math&gt;
:&lt;math&gt;p^3&gt;3 q^3 \Rightarrow D(p/q)=\mathrm{false}.\;&lt;/math&gt;

A real number is computable if and only if there is a computable Dedekind cut ''D'' corresponding to it. The function ''D'' is unique for each computable number (although of course two different programs may provide the same function).

A [[complex number]] is called computable if its real and imaginary parts are computable.

==Properties==

===Countable but not computably enumerable===
While the set of real numbers is [[uncountable]], the set of computable numbers is only [[countable]] and thus [[almost all]] real numbers are not computable. That the computable numbers are [[countable|at most countable]] intuitively comes from the fact that they are produced by Turing machines, of which there are only countably many.  More precisely, assigning a [[Gödel number]] to each Turing machine definition produces a subset &lt;math&gt;S&lt;/math&gt; of the [[natural numbers]] corresponding to the computable numbers and identifies a [[surjection]] from &lt;math&gt;S&lt;/math&gt; to the computable numbers, which shows that the computable numbers are [[subcountable]].  Moreover, for any computable number &lt;math&gt;x,&lt;/math&gt; the [[well ordering principle]] provides that there is a minimal element in &lt;math&gt;S&lt;/math&gt; which corresponds to &lt;math&gt;x&lt;/math&gt;, and therefore there exists a subset &lt;math&gt;S'\subset S&lt;/math&gt; consisting of the minimal elements, on which the map is a [[bijection]].  The inverse of this bijection is an [[Injective function|injection]] into the natural numbers of the computable numbers, proving that they are countable.

The set &lt;math&gt;S&lt;/math&gt; of these Gödel numbers, however, is not [[computably enumerable]] (nor consequently is &lt;math&gt;S'&lt;/math&gt;), even though the computable reals are themselves ordered. This is because there is no algorithm to determine which Gödel numbers correspond to Turing machines that produce computable reals. In order to produce a computable real, a Turing machine must compute a [[total function]], but the corresponding [[decision problem]] is in [[Turing degree]] '''0&amp;prime;&amp;prime;'''. Consequently, there is no surjective [[computable function]] from the natural numbers to the computable reals, and [[Cantor's diagonal argument]] cannot be used [[Constructivism (mathematics)|constructively]] to demonstrate uncountably many of them.

===Properties as a field===
The arithmetical operations on computable numbers are themselves computable in the sense that whenever real numbers ''a'' and ''b'' are computable then the following real numbers are also computable: ''a + b'', ''a - b'', ''ab'', and ''a/b'' if ''b'' is nonzero.
These operations are actually ''uniformly computable''; for example, there is a Turing machine which on input (''A'',''B'',&lt;math&gt;\epsilon&lt;/math&gt;) produces output ''r'', where ''A'' is the description of a Turing machine approximating ''a'', ''B'' is the description of a Turing machine approximating ''b'', and ''r'' is an &lt;math&gt;\epsilon&lt;/math&gt; approximation of ''a''+''b''.

The fact that computable real numbers form a [[field (mathematics)|field]] was first proved by [[Henry Gordon Rice]] in 1954 (Rice 1954).

Computable reals however do not form a [[computable algebra|computable field]], because the definition of a computable field requires effective equality.

===Non-computability of the ordering===
The order relation on the computable numbers is not computable. Let ''A'' be the description of a Turing machine approximating the number &lt;math&gt;a&lt;/math&gt;. Then there is no Turing machine which on input ''A'' outputs &quot;YES&quot; if &lt;math&gt;a &gt; 0&lt;/math&gt; and &quot;NO&quot; if &lt;math&gt;a \le 0.&lt;/math&gt; To see why, suppose the machine described by ''A'' keeps outputting 0 as &lt;math&gt;\epsilon&lt;/math&gt; approximations. It is not clear how long to wait before deciding that the machine will ''never'' output an approximation which forces ''a'' to be positive. Thus the machine will eventually have to guess that the number will equal 0, in order to produce an output; the sequence may later become different from 0. This idea can be used to show that the machine is incorrect on some sequences if it computes a total function. A similar problem occurs when the computable reals are represented as [[Dedekind cut]]s. The same holds for the equality relation : the equality test is not computable.

While the full order relation is not computable, the restriction of it to pairs of unequal numbers is computable. That is, there is a program that takes as input two Turing machines ''A'' and ''B'' approximating numbers ''a'' and ''b'', where ''a'' ≠ ''b'', and outputs whether &lt;math&gt;a &lt; b&lt;/math&gt; or &lt;math&gt;a &gt; b.&lt;/math&gt; It is sufficient to use ''ε''-approximations where &lt;math&gt; \varepsilon &lt; |b-a|/2,&lt;/math&gt; so by taking increasingly small ε (approaching 0), one eventually can decide whether &lt;math&gt;a &lt; b&lt;/math&gt; or &lt;math&gt;a &gt; b.&lt;/math&gt;

===Other properties===
The computable real numbers do not share all the properties of the real numbers used in analysis. For example, the least upper bound of a bounded increasing computable sequence of computable real numbers need not be a computable real number (Bridges and Richman, 1987:58). A sequence with this property is known as a [[Specker sequence]], as the first construction is due to E. Specker (1949). Despite the existence of counterexamples such as these, parts of calculus and real analysis can be developed in the field of computable numbers, leading to the study of [[computable analysis]].

Every computable number is [[definable number|definable]], but not vice versa. There are many definable, noncomputable real numbers, including:
*any number that encodes the solution of the [[halting problem]] (or any other [[undecidable problem]]) according to a chosen encoding scheme.
*[[Chaitin's constant]], &lt;math&gt;\Omega&lt;/math&gt;, which is a type of real number that is [[Turing degree|Turing equivalent]] to the halting problem.
Both of these examples in fact define an infinite set of definable, uncomputable numbers, one for each [[Universal Turing machine]].
A real number is computable if and only if the set of natural numbers it represents (when written in binary and viewed as a characteristic function) is computable.

Every computable number is [[arithmetical number|arithmetical]].

The set of computable real numbers (as well as every countable, [[densely ordered]] subset of computable reals without ends) is [[order-isomorphic]] to the set of rational numbers.

==Digit strings and the Cantor and Baire spaces==

Turing's original paper defined computable numbers as follows:

:A real number is computable if its digit sequence can be produced by some algorithm or Turing machine. The algorithm takes an integer &lt;math&gt;n \ge 1&lt;/math&gt; as input and produces the &lt;math&gt;n&lt;/math&gt;-th digit of the real number's decimal expansion as output.

(Note that the decimal expansion of ''a'' only refers to the digits following the decimal point.)

Turing was aware that this definition is equivalent to the &lt;math&gt;\epsilon&lt;/math&gt;-approximation definition given above. The argument proceeds as follows: if a number is computable in the Turing sense, then it is also computable in the &lt;math&gt;\epsilon&lt;/math&gt; sense: if &lt;math&gt;n &gt; \log_{10} (1/\epsilon)&lt;/math&gt;, then the first ''n'' digits of the decimal expansion for ''a'' provide an &lt;math&gt;\epsilon&lt;/math&gt; approximation of ''a''. For the converse, we pick an &lt;math&gt;\epsilon&lt;/math&gt; computable real number ''a'' and generate increasingly precise approximations until the ''n''th digit after the decimal point is certain. This always generates a decimal expansion equal to ''a'' but it may improperly end in an infinite sequence of 9's in which case it must have a finite (and thus computable) proper decimal expansion.

Unless certain topological properties of the real numbers are relevant it is often more convenient to deal with elements of &lt;math&gt;2^{\omega}&lt;/math&gt; (total 0,1 valued functions) instead of reals numbers in &lt;math&gt;[0,1]&lt;/math&gt;. The members of &lt;math&gt;2^{\omega}&lt;/math&gt; can be identified with binary decimal expansions but since the decimal expansions &lt;math&gt;.d_1d_2\ldots d_n0111\ldots&lt;/math&gt; and &lt;math&gt;.d_1d_2\ldots d_n10&lt;/math&gt; denote the same real number the interval &lt;math&gt;[0,1]&lt;/math&gt; can only be bijectively (and homeomorphically under the subset topology) identified with the subset of &lt;math&gt;2^{\omega}&lt;/math&gt; not ending in all 1's.

Note that this property of decimal expansions means it's impossible to effectively identify computable real numbers defined in terms of a decimal expansion and those defined in the &lt;math&gt;\epsilon&lt;/math&gt; approximation sense. Hirst has shown there is no algorithm which takes as input the description of a Turing machine which produces &lt;math&gt;\epsilon&lt;/math&gt; approximations for the computable number ''a'', and produces as output a Turing machine which enumerates the digits of ''a'' in the sense of Turing's definition (see Hirst 2007). Similarly it means that the arithmetic operations on the computable reals are not effective on their decimal representations as when adding decimal numbers, in order to produce one digit it may be necessary to look arbitrarily far to the right to determine if there is a carry to the current location. This lack of uniformity is one reason that the contemporary definition of computable numbers uses &lt;math&gt;\epsilon&lt;/math&gt; approximations rather than decimal expansions.

However, from a computational or [[measure theory|measure theoretic]] perspective the two structures &lt;math&gt;2^{\omega}&lt;/math&gt; and &lt;math&gt;[0,1]&lt;/math&gt; are essentially identical, and computability theorists often refer to members of &lt;math&gt;2^{\omega}&lt;/math&gt; as reals. While &lt;math&gt;[0,1]&lt;/math&gt; &lt;math&gt;2^{\omega}&lt;/math&gt; is [[totally disconnected space|totally disconnected]], for questions about &lt;math&gt;\Pi^0_1&lt;/math&gt; classes or randomness it's much less messy to work in &lt;math&gt;2^{\omega}&lt;/math&gt;.

Elements of &lt;math&gt;\omega^{\omega}&lt;/math&gt; are sometimes called reals as well and though containing a [[homeomorphism|homeomorphic]] image of &lt;math&gt;\mathbb{R}&lt;/math&gt; &lt;math&gt;\omega^{\omega}&lt;/math&gt; in addition to being totally disconnected isn't even locally compact. This leads to genuine differences in the computational properties. For instance the &lt;math&gt;x \in \mathbb{R}&lt;/math&gt; satisfying &lt;math&gt;\forall(n \in \omega)\phi(x,n)&lt;/math&gt; with &lt;math&gt;\phi(x,n)&lt;/math&gt; quantifier free must be computable while the unique &lt;math&gt;x \in \omega^{\omega}&lt;/math&gt; satisfying a universal formula can be arbitrarily high in the [[hyperarithmetic hierarchy]].

==Can computable numbers be used instead of the reals?==

The computable numbers include the specific real numbers which appear in practice, including all real [[algebraic number]]s, as well as ''e'', ''π'', and many other [[transcendental number]]s. Though the computable reals exhaust those reals we can calculate or approximate, the assumption that all reals are computable leads to substantially different conclusions about the real numbers. The question naturally arises of whether it is possible to dispose of the full set of reals and use computable numbers for all of mathematics. This idea is appealing from a [[constructivism (mathematics)|constructivist]] point of view, and has been pursued by what [[Errett Bishop|Bishop]] and Richman call the ''Russian school'' of constructive mathematics.

To actually develop analysis over computable numbers, some care must be taken. For example, if one uses the classical definition of a sequence, the set of computable numbers is not closed under the basic operation of taking the [[supremum]] of a [[bounded sequence]] (for example, consider a [[Specker sequence]], see the section above). This difficulty is addressed by considering only sequences which have a computable [[modulus of convergence]]. The resulting mathematical theory is called [[computable analysis]].

==Implementation==

There are some computer packages that work with computable real numbers, representing the real numbers as programs computing approximations.  One example is the RealLib package (Lambov 2015).

==See also==
*[[Definable number]]
*[[Semicomputable function]]
*[[Transcomputational problem]]

==References==
{{refbegin}}
*{{cite journal |first=Oliver |last=Aberth |title=Analysis in the Computable Number Field |journal=Journal of the Association for Computing Machinery |year=1968 |volume=15 |issue=2 |pages=276–299  |doi=10.1145/321450.321460 }} This paper describes the development of the calculus over the computable number field.
*{{cite book |first=Errett |last=Bishop |first2=Douglas |last2=Bridges |title=Constructive Analysis |publisher=Springer |year=1985 |isbn=0-387-15066-8 |pages= }}
*{{cite book |first=Douglas |last=Bridges |first2=Fred |last2=Richman |title=Varieties of Constructive Mathematics |url=https://books.google.com/books?id=oN5nsPkXhhsC |date=1987 |publisher=Cambridge University Press |isbn=978-0-521-31802-0 }}
*{{cite journal |first=Jeffry L. |last=Hirst |title=Representations of reals in reverse mathematics |journal=Bulletin of the Polish Academy of Sciences, Mathematics |year=2007 |volume=55 |issue=4 |pages=303–316  |url=https://eudml.org/doc/281227 |doi=10.4064/ba55-4-2}}
*{{Cite web |title=RealLib |last=Lambov |first=Branimir |publisher=GitHub |date=5 April 2015 |url= https://github.com/blambov/RealLib }}
*{{cite book |authorlink=Marvin Minsky |first=Marvin |last=Minsky |chapter=9. The Computable Real Numbers |title=Computation: Finite and Infinite Machines |url=https://archive.org/details/computationfinit0000mins |url-access=registration |publisher=Prentice-Hall |year=1967 |isbn=0-13-165563-9  |pages= |oclc=0131655639}} — expands on the topics of this article.
*{{cite journal |first=Henry Gordon |last=Rice |title=Recursive real numbers |journal=Proceedings of the American Mathematical Society |year=1954 |volume=5 |issue=5 |pages=784–791 |jstor=2031867  }}
*{{cite journal |first=E. |last=Specker |title=Nicht konstruktiv beweisbare Sätze der Analysis |journal=Journal of Symbolic Logic |year=1949 |volume=14 |issue=3 |pages=145–158  |jstor=2267043|url=http://doc.rero.ch/record/304204/files/S0022481200105663.pdf }}
*{{cite journal | last= Turing | first= A.M. | publication-date = 1937 | year = 1936 | title = On Computable Numbers, with an Application to the Entscheidungsproblem | periodical = Proceedings of the London Mathematical Society | series = 2 | volume = 42 | issue= 1 | pages = 230–65 | url = http://www.abelard.org/turpap2/tp2-ie.asp | doi= 10.1112/plms/s2-42.1.230 }}&lt;br/&gt;{{cite journal | last = Turing | first = A.M. | publication-date = 1937 | title = On Computable Numbers, with an Application to the Entscheidungsproblem: A correction | periodical = Proceedings of the London Mathematical Society | series = 2 | volume = 43 | issue = 6 | pages = 544–6 | doi = 10.1112/plms/s2-43.6.544 | year = 1938 }} Computable numbers (and Turing's a-machines) were introduced in this paper; the definition of computable numbers uses infinite decimal sequences.
*{{cite book |first=Klaus |last=Weihrauch |title=Computable analysis |series=Texts in theoretical computer science |publisher=Springer |year=2000 |isbn=3-540-66817-9 |pages= }} §1.3.2 introduces the definition by [[nested sequences of intervals]] converging to the singleton real. Other representations are discussed in §4.1.
*{{cite book |first=Klaus |last=Weihrauch |url=http://eccc.uni-trier.de/static/books/A_Simple_Introduction_to_Computable_Analysis_Fragments_of_a_Book/  |title=A simple introduction to computable analysis |year=1995 |publisher=Fernuniv., Fachbereich Informatik}}
*{{cite book |first=V. |last=Stoltenberg-Hansen |first2=J.V. |last2=Tucker |chapter=Computable Rings and Fields |editor-first=E.R. |editor-last=Griffor |title=Handbook of Computability Theory |chapterurl=https://books.google.com/books?id=KqeXZ4pPd5QC&amp;pg=PA363 |date=1999 |publisher=Elsevier |isbn=978-0-08-053304-9 |pages=363–448}}
*vanDerHoeven, ''Computations with effective real numbers''{{Full citation needed|date=September 2019}}
{{refend}}

{{Number systems}}

{{DEFAULTSORT:Computable Number}}
[[Category:Computability theory]]
[[Category:Theory of computation]]</text>
      <sha1>2v9bza1b9d4cxuayr3pnijinpxbp3lm</sha1>
    </revision>
  </page>
