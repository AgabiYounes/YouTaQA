  <page>
    <title>Extractor (mathematics)</title>
    <ns>0</ns>
    <id>9309</id>
    <revision>
      <id>478974773</id>
      <parentid>321430226</parentid>
      <timestamp>2012-02-26T17:20:14Z</timestamp>
      <contributor>
        <username>Rcsprinter123</username>
        <id>12557839</id>
      </contributor>
      <minor />
      <comment>Repairing links to disambiguation pages - [[Wikipedia:DPL|You can help!]] using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">An &lt;math&gt;(N,M,D,K,\epsilon)&lt;/math&gt; -'''extractor''' is a [[bipartite graph]] with &lt;math&gt;N&lt;/math&gt; nodes on the left and &lt;math&gt;M&lt;/math&gt; nodes on the right such that each node on the left has &lt;math&gt;D&lt;/math&gt; neighbors (on the right), which has the added property that
for any subset &lt;math&gt;A&lt;/math&gt; of the left vertices of size at least &lt;math&gt;K&lt;/math&gt;, the distribution on right vertices obtained by choosing a random node in &lt;math&gt;A&lt;/math&gt; and then following a random [[graph theory|edge]] to get a node x on the right side is &lt;math&gt;\epsilon&lt;/math&gt;-close to the [[Uniform distribution (continuous)|uniform distribution]] in terms of [[total variation distance]].

A [[disperser]] is a related graph. 

An equivalent way to view an extractor is as a bivariate function 

:&lt;math&gt;E : [N] \times [D] \rightarrow [M]&lt;/math&gt; 

in the natural way. With this view it turns out that the extractor property is equivalent to: for any source of randomness &lt;math&gt;X&lt;/math&gt; that gives &lt;math&gt;n&lt;/math&gt; [[bit]]s with [[min-entropy]] &lt;math&gt;\log K&lt;/math&gt;, the distribution &lt;math&gt; E(X,U_D) &lt;/math&gt; is &lt;math&gt;\epsilon&lt;/math&gt;-close to &lt;math&gt;U_M&lt;/math&gt;, where &lt;math&gt;U_T&lt;/math&gt; denotes the uniform distribution on &lt;math&gt;[T]&lt;/math&gt;.

Extractors are interesting when they can be constructed with small &lt;math&gt;K,D,\epsilon&lt;/math&gt; relative to &lt;math&gt;N&lt;/math&gt; and &lt;math&gt;M&lt;/math&gt; is as close to &lt;math&gt;KD&lt;/math&gt; (the total randomness in the input sources) as possible.

Extractor functions were originally researched as a way to ''extract'' [[randomness]] from weakly random sources. ''See'' [[randomness extractor]].

Using the [[probabilistic method]] it is easy to show that extractor graphs with really good parameters exist. The challenge is to find explicit or [[polynomial time]] computable examples of such graphs with good parameters. Algorithms that compute extractor (and disperser) graphs have found many applications in [[computer science]].

==References==
* Ronen Shaltiel, [http://www.cs.haifa.ac.il/~ronen/online_papers/survey.ps Recent developments in extractors] - a survey

[[Category:Graph families]]
[[Category:Pseudorandomness]]
[[Category:Theoretical computer science]]</text>
      <sha1>dvvjgzbkvh8ytplru0xvszje9ta4i5w</sha1>
    </revision>
  </page>
