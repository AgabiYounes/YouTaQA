  <page>
    <title>Digital signal processing</title>
    <ns>0</ns>
    <id>8525</id>
    <revision>
      <id>941656730</id>
      <parentid>938470914</parentid>
      <timestamp>2020-02-19T22:37:06Z</timestamp>
      <contributor>
        <username>Ira Leviton</username>
        <id>25046916</id>
      </contributor>
      <minor />
      <comment>Fixed a typo found with [[Wikipedia:Typo_Team/moss]] and deleted an unnecessary abbreviation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Redirect|Digital transform|the impact of digital technology on society|Digital transformation}}

{{More citations needed|date=May 2008}}

'''Digital signal processing''' ('''DSP''') is the use of [[digital processing]], such as by computers or more specialized [[digital signal processor]]s, to perform a wide variety of [[signal processing]] operations.  The [[digital signals]] processed in this manner are a sequence of numbers that represent [[Sampling (signal processing)|samples]] of a [[continuous variable]] in a domain such as time, space, or frequency. In [[digital electronics]], a digital signal is represented as a [[pulse train]],&lt;ref&gt;{{cite book |author=B. SOMANATHAN NAIR |title=Digital electronics and logic design |date=2002 |isbn=9788120319561 |publisher=PHI Learning Pvt. Ltd. |quote=Digital signals are fixed-width pulses, which occupy only one of two levels of amplitude. |page=289}}&lt;/ref&gt;&lt;ref&gt;{{cite book |author=Joseph Migga Kizza |isbn=9780387204734 |date=2005 |publisher=Springer Science &amp; Business Media |title=Computer Network Security}}&lt;/ref&gt; which is typically generated by a [[MOSFET]] (metal–oxide–semiconductor field-effect transistor) switch.&lt;ref name=&quot;electronicdesign&quot;&gt;{{cite web |title=Applying MOSFETs to Today's Power-Switching Designs |url=https://www.electronicdesign.com/mosfets/applying-mosfets-today-s-power-switching-designs |website=[[Electronic Design]] |accessdate=10 August 2019 |date=23 May 2016}}&lt;/ref&gt;&lt;ref&gt;{{cite book |title=2000 Solved Problems in Digital Electronics |date=2005 |publisher=[[Tata McGraw-Hill Education]] |isbn=978-0-07-058831-8 |page=151 |url=https://books.google.com/books?id=N6FDii6_nSEC&amp;pg=PA151}}&lt;/ref&gt;

Digital signal processing and [[analog signal processing]] are subfields of signal processing. DSP applications include [[Audio signal processing|audio]] and [[speech processing]], [[sonar]], [[radar]] and other [[sensor array]] processing, [[spectral density estimation]], [[statistical signal processing]], [[digital image processing]], [[data compression]], [[video coding]], [[audio coding]], [[image compression]], signal processing for [[telecommunication]]s, [[control system]]s, [[biomedical engineering]], and [[seismology]], among others.

DSP can involve linear or nonlinear operations. Nonlinear signal processing is closely related to [[nonlinear system identification]]&lt;ref&gt;{{cite book |last=Billings |first=Stephen A. |title=Nonlinear System Identification: NARMAX Methods in the Time, Frequency, and Spatio-Temporal Domains |publisher=Wiley |isbn=978-1-119-94359-4 |date=Sep 2013 |location=UK}}&lt;/ref&gt;  and can be implemented in the [[Time domain|time]], [[Frequency domain|frequency]], and [[Film|spatio-temporal domains]].&lt;!--sort of a flip stab at a wikilink for this concept. Readers ''might'' get the idea.--&gt;

The application of digital computation to signal processing allows for many advantages over analog processing in many applications, such as [[error detection and correction]] in transmission as well as [[data compression]].&lt;ref&gt;{{cite book |title=Digital Signal Processing: Instant access |last=Broesch |first=James D. |last2=Stranneby |first2=Dag |last3=Walker |first3=William |date=2008-10-20 |publisher=Butterworth-Heinemann-Newnes |edition=1 |isbn=9780750689762 |page=3}}&lt;/ref&gt; Digital signal processing is also fundamental to [[digital technology]], such as [[digital telecommunication]] and [[wireless communications]].&lt;ref name=&quot;Srivastava&quot;&gt;{{cite book |last1=Srivastava |first1=Viranjay M. |last2=Singh |first2=Ghanshyam |title=MOSFET Technologies for Double-Pole Four-Throw Radio-Frequency Switch |date=2013 |publisher=[[Springer Science &amp; Business Media]] |isbn=9783319011653 |page=1 |url=https://books.google.com/books?id=fkO9BAAAQBAJ&amp;pg=PA1}}&lt;/ref&gt; DSP is applicable to both [[streaming data]] and static (stored) data.

== Signal sampling ==
{{Main|Sampling (signal processing)}}

To digitally analyze and manipulate an analog signal, it must be digitized with an [[analog-to-digital converter]] (ADC).&lt;ref&gt;{{cite journal |last=Walden |first=R. H. |date=1999 |title=Analog-to-digital converter survey and analysis |journal=IEEE Journal on Selected Areas in Communications |volume=17 |issue=4 |pages=539–550 |doi=10.1109/49.761034}}&lt;/ref&gt; Sampling is usually carried out in two stages, [[discretization]] and [[Quantization (signal processing)|quantization]]. Discretization means that the signal is divided into equal intervals of time, and each interval is represented by a single measurement of amplitude.  Quantization means each amplitude measurement is approximated by a value from a finite set.  Rounding [[real numbers]] to integers is an example.

The [[Nyquist–Shannon sampling theorem]] states that a signal can be exactly reconstructed from its samples if the sampling frequency is greater than twice the highest frequency component in the signal. In practice, the sampling frequency is often significantly higher than twice the [[Nyquist frequency]].&lt;ref&gt;{{cite journal |last=Candes |first=E. J. |last2=Wakin |first2=M. B. |date=2008 |title=An Introduction To Compressive Sampling |journal=IEEE Signal Processing Magazine |volume=25 |issue=2 |pages=21–30 |doi=10.1109/MSP.2007.914731}}&lt;/ref&gt;

Theoretical DSP analyses and derivations are typically performed on [[discrete-time signal]] models with no amplitude inaccuracies ([[quantization error]]), &quot;created&quot; by the abstract process of [[Sampling (signal processing)|sampling]]. Numerical methods require a quantized signal, such as those produced by an ADC.  The processed result might be a frequency spectrum or a set of statistics.  But often it is another quantized signal that is converted back to analog form by a [[digital-to-analog converter]] (DAC).

== Domains ==
In DSP, engineers usually study digital signals in one of the following domains: [[time domain]] (one-dimensional signals), spatial domain (multidimensional signals), [[frequency domain]], and [[wavelet]] domains. They choose the domain in which to process a signal by making an informed assumption (or by trying different possibilities) as to which domain best represents the essential characteristics of the signal and the processing to be applied to it. A sequence of samples from a measuring device produces a temporal or spatial domain representation, whereas a [[discrete Fourier transform]] produces the frequency domain representation.

=== Time and space domains ===
{{Main|Time domain}}

The most common processing approach in the time or space domain is enhancement of the input signal through a method called filtering. [[Digital filter]]ing generally consists of some linear transformation of a number of surrounding samples around the current sample of the input or output signal. There are various ways to characterize filters; for example:

* A ''linear'' filter is a [[linear transformation]] of input samples; other filters are ''[[nonlinear]]''. Linear filters satisfy the [[superposition principle]], i.e. if an input is a weighted linear combination of different signals, the output is a similarly weighted linear combination of the corresponding output signals.
* A ''causal'' filter uses only previous samples of the input or output signals; while a ''non-causal'' filter uses future input samples. A non-causal filter can usually be changed into a causal filter by adding a delay to it.
* A ''time-invariant'' filter has constant properties over time; other filters such as [[adaptive filter]]s change in time.
* A ''stable'' filter produces an output that converges to a constant value with time, or remains bounded within a finite interval. An ''unstable'' filter can produce an output that grows without bounds, with bounded or even zero input.
* A [[finite impulse response]] (FIR) filter uses only the input signals, while an [[infinite impulse response]] (IIR) filter uses both the input signal and previous samples of the output signal. FIR filters are always stable, while IIR filters may be unstable.

A filter can be represented by a [[block diagram]], which can then be used to derive a sample processing [[algorithm]] to implement the filter with hardware instructions. A filter may also be described as a [[difference equation]], a collection of [[zeros and poles]] or an [[impulse response]] or [[step response]].

The output of a linear digital filter to any given input may be calculated by [[convolution|convolving]] the input signal with the [[impulse response]].

=== Frequency domain ===
{{Main|Frequency domain}}

Signals are converted from time or space domain to the frequency domain usually through use of the [[Fourier transform]]. The Fourier transform converts the time or space information to a magnitude and phase component of each frequency. With some applications, how the phase varies with frequency can be a significant consideration. Where phase is unimportant, often the Fourier transform is converted to the power spectrum, which is the magnitude of each frequency component squared. 

The most common purpose for analysis of signals in the frequency domain is analysis of signal properties. The engineer can study the spectrum to determine which frequencies are present in the input signal and which are missing. Frequency domain analysis is also called ''spectrum-'' or ''spectral analysis''.

Filtering, particularly in non-realtime work can also be achieved in the frequency domain, applying the filter and then converting back to the time domain. This can be an efficient implementation and can give essentially any filter response including excellent approximations to [[brickwall filter]]s.

There are some commonly used frequency domain transformations. For example, the [[cepstrum]] converts a signal to the frequency domain through Fourier transform, takes the logarithm, then applies another Fourier transform. This emphasizes the harmonic structure of the original spectrum.

===Z-plane analysis===
Digital filters come in both IIR and FIR types. Whereas FIR filters are always stable, IIR filters have feedback loops that may become unstable and oscillate. The [[Z-transform]] provides a tool for analyzing stability issues of digital IIR filters. It is analogous to the [[Laplace transform]], which is used to design and analyze analog IIR filters.

===Wavelet===
[[File:Jpeg2000 2-level wavelet transform-lichtenstein.png|thumb|300px|An example of the 2D discrete wavelet transform that is used in [[JPEG2000]]. The original image is high-pass filtered, yielding the three large images, each describing local changes in brightness (details) in the original image. It is then low-pass filtered and downscaled, yielding an approximation image; this image is high-pass filtered to produce the three smaller detail images, and low-pass filtered to produce the final approximation image in the upper-left.]]
In [[numerical analysis]] and [[functional analysis]], a [[discrete wavelet transform]] is any [[wavelet transform]] for which the [[wavelet]]s are discretely sampled. As with other wavelet transforms, a key advantage it has over [[Fourier transform]]s is temporal resolution: it captures both frequency ''and'' location information. The accuracy of the joint time-frequency resolution is limited by the [[Uncertainty principle#Signal processing|uncertainty principle]] of time-frequency.

== Applications ==
Applications of DSP include [[audio signal processing]], [[audio compression (data)|audio compression]], [[digital image processing]], [[video compression]], [[speech processing]], [[speech recognition]], [[digital communication]]s, [[digital synthesizer]]s, [[radar]], [[sonar]], [[financial signal processing]], [[seismology]] and [[biomedicine]]. Specific examples include [[speech coding]] and transmission in digital [[mobile phone]]s, [[digital room correction|room correction]] of sound in [[hi-fi]] and [[sound reinforcement]] applications, [[weather forecasting]], [[economic forecasting]], [[seismology|seismic]] data processing, analysis and control of [[industrial process]]es, [[medical imaging]] such as [[Computed axial tomography|CAT]] scans and [[MRI]], [[MP3]] compression, [[computer graphics]], [[image manipulation]], [[audio crossover]]s and [[equalization (audio)|equalization]], and audio [[effects unit]]s.&lt;ref&gt;{{cite book |last1=Rabiner |first1=Lawrence R. |author1-link=Lawrence Rabiner |last2=Gold |first2=Bernard |date=1975 |title=Theory and application of digital signal processing |location=Englewood Cliffs, NJ |publisher=Prentice-Hall, Inc. |isbn=978-0139141010 |url-access=registration |url=https://archive.org/details/theoryapplicatio00rabi }}&lt;/ref&gt;

== Implementation ==
DSP [[algorithm]]s may be run on general-purpose computers and [[digital signal processor]]s. DSP algorithms are also implemented on purpose-built hardware such as [[application-specific integrated circuit]] (ASICs). Additional technologies for digital signal processing include more powerful general purpose [[microprocessor]]s, [[field-programmable gate array]]s (FPGAs), [[digital signal controller]]s (mostly for industrial applications such as motor control), and [[stream processing|stream processors]].&lt;ref&gt;{{cite book |title=Digital Signal Processing and Applications |last=Stranneby |first=Dag |last2=Walker |first2=William |edition=2nd |publisher=Elsevier |year=2004 |isbn=0-7506-6344-8 |url=https://books.google.com/books?id=NKK1DdqcDVUC&amp;pg=PA241}}&lt;/ref&gt;

For systems that do not have a [[real-time computing]] requirement and the signal data (either input or output) exists in data files, processing may be done economically with a general-purpose computer.  This is essentially no different from any other [[data processing]], except DSP mathematical techniques (such as the [[Discrete cosine transform|DCT]] and [[Fast Fourier transform|FFT]]) are used, and the sampled data is usually assumed to be uniformly sampled in time or space.  An example of such an application is processing [[digital photograph]]s with software such as [[Photoshop]].

When the application requirement is real-time, DSP is often implemented using specialized or dedicated processors or microprocessors, sometimes using multiple processors or multiple processing cores. These may process data using fixed-point arithmetic or floating point. For more demanding applications [[FPGA]]s may be used.&lt;ref&gt;{{cite web |last=JPFix |title=FPGA-Based Image Processing Accelerator |url=http://www.jpfix.com/About_Us/Articles/FPGA-Based_Image_Processing_Ac/fpga-based_image_processing_ac.html |date=2006 |accessdate=2008-05-10}}&lt;/ref&gt; For the most demanding applications or high-volume products, [[Application-specific integrated circuit|ASIC]]s might be designed specifically for the application.

== Techniques ==
{{Div col|colwidth=20em}}
* [[Bilinear transform]]
* [[Discrete Fourier transform]]
* [[Discrete-time Fourier transform]]
* [[Filter design]]
* [[Goertzel algorithm]]
* [[LTI system theory]]
* [[Minimum phase]]
* [[s-plane]]
* [[Transfer function]]
* [[Z-transform]]
{{Div col end}}

== Related fields ==
{{Div col|colwidth=20em}}
* [[Analog signal processing]]
* [[Automatic control]]
* [[Computer Engineering]]
* [[Computer science]]
* [[Data compression]]
* [[Dataflow programming]]
* [[Discrete cosine transform]]
* [[Electrical engineering]]
* [[Fourier analysis]]
* [[Information theory]]
* [[Machine learning]]
* [[Real-time computing]]
* [[Stream processing]]
* [[Telecommunication]]
* [[Time series]]
* [[Wavelet]]
{{Div col end}}

== References==
{{Reflist}}

== Further reading ==
{{wikibooks|Digital Signal Processing}}
{{refbegin|30em}}
*[[N. Ahmed]] and K.R. Rao (1975).  Orthogonal Transforms for Digital Signal Processing.  Springer-Verlag (Berlin – Heidelberg – New York), {{ISBN|3-540-06556-3}}.
*Jonathan M. Blackledge, Martin Turner: ''Digital Signal Processing: Mathematical and Computational Methods, Software Development and Applications'', Horwood Publishing, {{ISBN|1-898563-48-9}}
*James D. Broesch: ''Digital Signal Processing Demystified'', Newnes, {{ISBN|1-878707-16-7}}
*Paul M. Embree, Damon Danieli: ''C++ Algorithms for Digital Signal Processing'', Prentice Hall, {{ISBN|0-13-179144-3}}
*Hari Krishna Garg: ''Digital Signal Processing Algorithms'', CRC Press, {{ISBN|0-8493-7178-3}}
*P. Gaydecki: ''Foundations Of Digital Signal Processing: Theory, Algorithms And Hardware Design'', Institution of Electrical Engineers, {{ISBN|0-85296-431-5}}
*Ashfaq Khan: ''Digital Signal Processing Fundamentals'', Charles River Media, {{ISBN|1-58450-281-9}}
*Sen M. Kuo, Woon-Seng Gan: ''Digital Signal Processors: Architectures, Implementations, and Applications'', Prentice Hall, {{ISBN|0-13-035214-4}}
*Paul A. Lynn, Wolfgang Fuerst: ''Introductory Digital Signal Processing with Computer Applications'', John Wiley &amp; Sons, {{ISBN|0-471-97984-8}}
*Richard G. Lyons: ''Understanding Digital Signal Processing'', Prentice Hall, {{ISBN|0-13-108989-7}}
*Vijay Madisetti, Douglas B. Williams: ''The Digital Signal Processing Handbook'', CRC Press, {{ISBN|0-8493-8572-5}}
*[[James H. McClellan]], [[Ronald W. Schafer]], Mark A. Yoder: ''Signal Processing First'', Prentice Hall, {{ISBN|0-13-090999-8}}
*Bernard Mulgrew, Peter Grant, John Thompson: ''Digital Signal Processing – Concepts and Applications'', Palgrave Macmillan, {{ISBN|0-333-96356-3}}
*Boaz Porat: ''A Course in Digital Signal Processing'', Wiley, {{ISBN|0-471-14961-6}}
*John G. Proakis, Dimitris Manolakis: ''Digital Signal Processing: Principles, Algorithms and Applications'', 4th ed, Pearson, April 2006, {{ISBN|978-0131873742}}
*John G. Proakis: ''A Self-Study Guide for Digital Signal Processing'', Prentice Hall, {{ISBN|0-13-143239-7}}
*Charles A. Schuler: ''Digital Signal Processing: A Hands-On Approach'', McGraw-Hill, {{ISBN|0-07-829744-3}}
*Doug Smith: ''Digital Signal Processing Technology: Essentials of the Communications Revolution'', American Radio Relay League, {{ISBN|0-87259-819-5}}
*{{cite book|url=http://www.dspguide.com|title=Digital Signal Processing: A Practical Guide for Engineers and Scientists|last=Smith|first=Steven W.|date=2002|publisher=Newnes|isbn=0-7506-7444-X|location=|pages=}}
*{{cite book|title =Digital Signal Processing, a Computer Science Perspective|last =Stein|first =Jonathan Yaakov|date =2000-10-09|publisher =Wiley|isbn =0-471-29546-9|location=|pages=}}
*{{cite book|title =Advanced Signal Processing Handbook: Theory and Implementation for Radar, Sonar, and Medical Imaging Real-Time Systems|last =Stergiopoulos|first =Stergios|date =2000|publisher =CRC Press|isbn =0-8493-3691-0|location=|pages=}}
*{{cite book|title =Fundamentals of Digital Signal Processing|last =Van De Vegte|first =Joyce|date =2001|publisher =Prentice Hall|isbn =0-13-016077-6|location=|pages=}}
*{{Cite book|title =Discrete-Time Signal Processing|last=Oppenheim|first=Alan V.|last2=Schafer|first2=Ronald W.|publisher=Pearson|year=2001|isbn=1-292-02572-7|location=|pages=}}
*Hayes, Monson H. Statistical digital signal processing and modeling. John Wiley &amp; Sons, 2009. (with [https://www.mathworks.com/matlabcentral/fileexchange/2183-statistical-digital-signal-processing-and-modeling?s_tid=prof_contriblnk MATLAB scripts]){{refend}}

{{Digital systems}}
{{DSP}}

{{Authority control}}

{{DEFAULTSORT:Digital Signal Processing}}
[[Category:Digital electronics]]
[[Category:Digital signal processing|*]]
[[Category:Telecommunication theory]]
[[Category:Radar signal processing]]</text>
      <sha1>e9ak593tb8ivzdkc0oj5yzguefido5j</sha1>
    </revision>
  </page>
