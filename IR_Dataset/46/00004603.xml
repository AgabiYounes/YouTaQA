  <page>
    <title>Booch method</title>
    <ns>0</ns>
    <id>4603</id>
    <revision>
      <id>942619679</id>
      <parentid>937805508</parentid>
      <timestamp>2020-02-25T19:58:30Z</timestamp>
      <contributor>
        <username>Fuhrmanator</username>
        <id>3729404</id>
      </contributor>
      <comment>Undid revision 937805508 by [[Special:Contributions/117.213.75.3|117.213.75.3]] ([[User talk:117.213.75.3|talk]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[[Image:Booch-diagram.png|thumb|250px|Class diagram]]

The '''Booch method'''&lt;ref name=&quot;book&quot;&gt;{{cite book
 | first = Grady
 | last = Booch
 | authorlink = Grady Booch
 | year = 1993
 | title = Object-oriented Analysis and Design with Applications
 | edition = 2nd
 | location = Redwood City
 | publisher = Benjamin Cummings
 | isbn = 0-8053-5340-2
 | url = https://archive.org/details/objectorientedan00booc
 }}&lt;/ref&gt; is a method for object-oriented software development.  It is composed of an [[object modeling language]],&lt;ref&gt;{{cite book|last=Booch|first=Grady|title=Object-Oriented Analysis and Design with Applications (2nd Edition)|year=1994|publisher=Addison-Wesley|isbn=0-8053-5340-2|chapter=Chapter 5:Notation|url=https://archive.org/details/objectorientedan00booc}}&lt;/ref&gt; an iterative object-oriented development process,&lt;ref&gt;{{cite book|last=Booch|first=Grady|title=Object-Oriented Analysis and Design with Applications (2nd Edition)|year=1994|publisher=Addison-Wesley|isbn=0-8053-5340-2|chapter=Chapter 6:The process|url=https://archive.org/details/objectorientedan00booc}}&lt;/ref&gt; and a set of recommended practices.&lt;ref&gt;{{cite book|last=Booch|first=Grady|title=Object-Oriented Analysis and Design with Applications (2nd Edition)|year=1994|publisher=Addison-Wesley|isbn=0-8053-5340-2|chapter=Chapter 7:Pragmatics|url=https://archive.org/details/objectorientedan00booc}}&lt;/ref&gt;

The method was authored by [[Grady Booch]] when he was working for [[Rational Software]] (acquired by IBM), published in 1992 and revised in 1994.  It was widely used in [[software engineering]] for [[object-oriented analysis and design]] and benefited from ample documentation and support tools.&lt;ref&gt;{{cite book
 | first = Robert Cecil
 | last = Martin
 | authorlink = Robert Cecil Martin
 | year = 1995
 | title = Designing Object-Oriented C++ Applications using the Booch Method
 | publisher = Prentice-Hall
 | isbn = 0-13-203837-4
 | url = https://archive.org/details/designingobjecto00mart
 }}
&lt;/ref&gt;

The notation aspect of the Booch method was superseded by the [[Unified Modeling Language]] (UML), which features graphical elements from the Booch method along with elements from the [[object-modeling technique]] (OMT) and [[object-oriented software engineering]] (OOSE).  Methodological aspects of the Booch method have been incorporated into several methodologies and processes, the primary such methodology being the [[Rational Unified Process]] (RUP).

==Content of the method==

The Booch notation is characterized by cloud shapes to represent classes and distinguishes the following diagrams:&lt;ref&gt;{{cite web|last=MD|first=Fathima|title=World of diagrams:Booch diagrams|url=http://worldofdiagrams.blogspot.be/2008/09/booch-diagrams.html|accessdate = 3 January 2017}}&lt;/ref&gt;

{| class=&quot;wikitable&quot;
|-
! Model !! Type !! Diagram !! UML correspondence
|-
| Logical || Static || Class diagram || [[Class diagram]]
|-
|  ||  || Object diagram || [[Object diagram]]
|-
|  || Dynamic  || State transition diagram || [[State diagram (UML)|State chart diagram]]
|-
|  ||  || Interaction diagram || [[Sequence diagram]]
|-
| Physical || Static || Module diagram || [[Component diagram]]
|-
|  ||  || Process diagram || [[Deployment diagram]]
|}
 
The process is organized around a macro and a micro process.&lt;ref name=&quot;book&quot; /&gt;

The macro process identifies the following activities cycle: 
* Conceptualization : establish core requirements
* Analysis : develop a model of the desired behavior
* Design : create an architecture 
* Evolution: for the implementation
* Maintenance : for evolution after the delivery

The micro process is applied to new classes, structures or behaviors that emerge during the macro process.  It is made of the following cycle: 
* Identification of classes and objects
* Identification of their semantics 
* Identification of their relationships
* Specification of their interfaces and implementation

==References==
{{reflist}}

==External links==
*[https://web.archive.org/web/20110826152434/http://salmosa.kaist.ac.kr/BoochReferenz/class.html Class diagrams], [https://web.archive.org/web/20110826153244/http://salmosa.kaist.ac.kr/BoochReferenz/object.html Object diagrams], [https://web.archive.org/web/20110826153701/http://salmosa.kaist.ac.kr/BoochReferenz/state.html State Event diagrams] and [https://web.archive.org/web/20110826152945/http://salmosa.kaist.ac.kr/BoochReferenz/module.html Module diagrams].
* [https://www.slac.stanford.edu/BFROOT/www/doc/workbook_kiwi/coding/booch/method.html The Booch Method of Object-Oriented Analysis &amp; Design]

{{DEFAULTSORT:Booch Method}}
[[Category:Object-oriented programming]]

[[de:Grady Booch#Booch-Notation]]</text>
      <sha1>hnxlydaphh41w9bdd56n7y2pfemhdn2</sha1>
    </revision>
  </page>
