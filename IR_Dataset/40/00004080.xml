  <page>
    <title>BQP</title>
    <ns>0</ns>
    <id>4080</id>
    <revision>
      <id>938549976</id>
      <parentid>938549922</parentid>
      <timestamp>2020-01-31T22:00:52Z</timestamp>
      <contributor>
        <username>Omnissiahs hierophant</username>
        <id>38027938</id>
      </contributor>
      <comment>/* See also */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Short description|computational complexity class of problems solvable in polynomial time by a universal quantum computer with bounded error}}
In [[computational complexity theory]], '''bounded-error quantum polynomial time''' ('''BQP''') is the class of [[decision problems]] solvable by a [[quantum computer]] in [[polynomial time]], with an error probability of at most 1/3 for all instances.&lt;ref name=&quot;Chuang2000&quot;&gt;Michael Nielsen and Isaac Chuang (2000). ''Quantum Computation and Quantum Information''. Cambridge: Cambridge University Press. {{isbn|0-521-63503-9}}.&lt;/ref&gt; It is the quantum analogue of the complexity class '''[[BPP (complexity)|BPP]]'''.

A decision problem is a member of  '''BQP''' if there exists a [[quantum algorithm]] (an [[algorithm]] that runs on a quantum computer) that solves the decision problem [[with high probability]] and is guaranteed to run in polynomial time. A run of the algorithm will correctly solve the decision problem with  a probability of at least 2/3.

{| class=&quot;wikitable&quot; style=&quot;float:right; clear:right; text-align:center; margin-left:1em;&quot;
|-
!colspan=&quot;3&quot;| BQP algorithm (1 run)
|-
! {{diagonal split header|Correct&lt;br /&gt;answer|Answer&lt;div style{{=}}&quot;padding-left:4em;&quot;&gt;produced&lt;/div&gt;}}
! {{yes}}
! {{no}}
|-
! {{yes}}
| ≥ 2/3
| ≤ 1/3
|-
! {{no}}
| ≤ 1/3
| ≥ 2/3
|-
!colspan=&quot;3&quot;| BQP algorithm (''k'' runs)
|-
! {{diagonal split header|Correct&lt;br /&gt;answer|&lt;div style{{=}}&quot;padding-left:4em;&quot;&gt;Answer&lt;/div&gt;produced}}
! {{yes}}
! {{no}}
|-
! {{yes}}
| &gt; 1 − 2&lt;sup&gt;−''ck''&lt;/sup&gt;
| &lt; 2&lt;sup&gt;−''ck''&lt;/sup&gt;
|-
! {{no}}
| &lt; 2&lt;sup&gt;−''ck''&lt;/sup&gt;
| &gt; 1 − 2&lt;sup&gt;−''ck''&lt;/sup&gt;
|-
|colspan=&quot;3&quot; style=&quot;font-size:85%&quot;|for some constant ''c'' &gt; 0
|}

==Definition==
'''BQP''' can be viewed as the [[Language (computability)|languages]] associated with certain bounded-error uniform families of [[quantum circuit]]s.&lt;ref name=Chuang2000/&gt; A language ''L'' is in '''BQP''' if and only if there exists a [[Circuit complexity#Polynomial-time uniform|polynomial-time uniform]] family of quantum circuits &lt;math&gt;\{Q_n:n \in \mathbb{N}\}&lt;/math&gt;, such that
* For all &lt;math&gt;n \in \mathbb{N}&lt;/math&gt;, ''Q&lt;sub&gt;n&lt;/sub&gt;'' takes ''n'' qubits as input and outputs 1 bit
* For all ''x'' in ''L'', &lt;math&gt;\mathrm{Pr}(Q_{|x|}(x)=1)\geq \tfrac{2}{3}&lt;/math&gt;
* For all ''x'' not in ''L'', &lt;math&gt;\mathrm{Pr}(Q_{|x|}(x)=0)\geq  \tfrac{2}{3}&lt;/math&gt;

Alternatively, one can define '''BQP''' in terms of [[quantum Turing machine]]s. A language ''L'' is in '''BQP''' if and only if there exists a polynomial quantum Turing machine that accepts ''L'' with an error probability of at most 1/3 for all instances.&lt;ref name=&quot;BernVazi&quot;&gt;{{cite journal |last1=Bernstein |first1=Ethan |last2=Vazirani |first2=Umesh |title=Quantum Complexity Theory |journal=SIAM Journal on Computing |date=October 1997 |volume=26 |issue=5 |pages=1411–1473 |doi=10.1137/S0097539796300921 |ref=BernVazi|citeseerx=10.1.1.655.1186 }}&lt;/ref&gt;

Similarly to other &quot;bounded error&quot; probabilistic classes the choice of 1/3 in the definition is arbitrary. We can run the algorithm a constant number of times and take a majority vote to achieve any desired probability of correctness less than 1, using the [[Chernoff bound]]. The complexity class is unchanged by allowing error as high as 1/2 − ''n''&lt;sup&gt;−''c''&lt;/sup&gt; on the one hand, or requiring error as small as 2&lt;sup&gt;−''n&lt;sup&gt;c&lt;/sup&gt;''&lt;/sup&gt; on the other hand, where ''c'' is any positive constant, and ''n'' is the length of input.&lt;ref&gt;{{cite book |last1=Barak |first1=Sanjeev Arora, Boaz |title=Computational Complexity: A Modern Approach / Sanjeev Arora and Boaz Barak |date=2009 |location=Cambridge |page=122 |url=https://www.cs.princeton.edu/theory/complexity/ |accessdate=24 July 2018}}&lt;/ref&gt;

== Quantum computation ==
The number of [[qubit]]s in the computer is allowed to be a [[polynomial function]] of the instance size. For example, algorithms are known for factoring an ''n''-bit integer using just over 2''n'' qubits ([[Shor's algorithm]]).

Usually, computation on a quantum computer ends with a [[Measurement in quantum mechanics|measurement]]. This leads to a [[Wavefunction collapse|collapse]] of quantum state to one of the [[Quantum state|basis states]]. It can be said that the quantum state is measured to be in the correct state with high probability.

Quantum computers have gained widespread interest because some problems of practical interest are known to be in '''BQP''', but suspected to be outside '''P'''. Some prominent examples are:
*[[Integer factorization]] (see [[Shor's algorithm]])&lt;ref name=&quot;Shor&quot;&gt;[http://www.arxiv.org/abs/quant-ph/9508027 arXiv:quant-ph/9508027v2 ''Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer'', Peter W. Shor]&lt;/ref&gt;
*[[Discrete logarithm]]&lt;ref name=&quot;Shor&quot;/&gt;
*Simulation of quantum systems (see [[universal quantum simulator]])
*Approximating the [[Jones polynomial]] at certain roots of unity

== Relationship to other complexity classes ==

{{unsolved|computer science|What is the relationship between '''BQP''' and '''NP'''?}}
[[Image:BQP complexity class diagram.svg|thumb|The suspected relationship of '''BQP''' to other problem spaces&lt;ref name=Chuang2000/&gt;]]

This class is defined for a quantum computer and its natural corresponding class for an ordinary computer (or a [[Turing machine]] plus a source of randomness) is '''[[Bounded-error probabilistic polynomial|BPP]]'''. Just like '''P''' and '''BPP''', '''BQP''' is [[low (complexity)|low]] for itself, which means '''BQP'''&lt;sup&gt;'''BQP'''&lt;/sup&gt; = '''BQP'''&lt;ref name=&quot;BernVazi&quot;/&gt;. Informally, this is true because polynomial time algorithms are closed under composition. If a polynomial time algorithm calls as a subroutine polynomially many polynomial time algorithms, the resulting algorithm is still polynomial time.

'''BQP''' contains '''[[P (complexity)|P]]''' and '''[[Bounded-error probabilistic polynomial|BPP]]''' and is contained in '''[[Almost Wide Probabilistic Polynomial-Time|AWPP]]''',&lt;ref&gt;{{Cite journal | last1=Fortnow | first1=Lance | last2=Rogers | first2=John | title=Complexity limitations on Quantum computation | url=http://people.cs.uchicago.edu/~fortnow/papers/quantum.pdf | year=1999 | journal=J. Comput. Syst. Sci. | issn=0022-0000 | volume=59 | issue=2 | pages=240–252 | doi=10.1006/jcss.1999.1651 | postscript=&lt;!--None--&gt;}}&lt;/ref&gt; '''[[PP (complexity)|PP]]'''&lt;ref&gt;L. Adleman, J. DeMarrais, and M.-D. Huang. Quantum computability. SIAM J. Comput.,
26(5):1524–1540, 1997.&lt;/ref&gt; and '''[[PSPACE]]'''.&lt;ref name=BernVazi/&gt;
In fact, '''BQP''' is [[low (complexity)|low]] for '''PP''', meaning that a '''PP''' machine achieves no benefit from being able to solve '''BQP''' problems instantly, an indication of the possible difference in power between these similar classes. The known relationships with classic complexity classes are:
:&lt;math&gt;\mathsf{P \subseteq BPP \subseteq BQP\subseteq AWPP \subseteq PP \subseteq PSPACE}&lt;/math&gt;

As the problem of '''P ≟ PSPACE''' has not yet been solved, the proof of inequality between '''BQP''' and classes mentioned above is supposed to be difficult.&lt;ref name=BernVazi/&gt; The relation between '''BQP''' and '''[[NP (complexity)|NP]]''' is not known. In May 2018, computer scientists [[Ran Raz]] of [[Princeton University]] and Avishay Tal of [[Stanford University]] published a paper&lt;ref&gt;{{Cite web|url=https://eccc.weizmann.ac.il/report/2018/107/|title=ECCC - TR18-107|last=George|first=Michael Goderbauer, Stefan|website=eccc.weizmann.ac.il|language=en|access-date=2018-08-03}}&lt;/ref&gt; which showed that, relative to an [[Oracle machine|oracle]], BQP was not contained in [[Polynomial hierarchy|PH]].

Adding [[postselection]] to '''BQP''' results in the complexity class '''[[PostBQP]]''' which is equal to '''[[PP (complexity)|PP]]'''.&lt;ref name=&quot;PostBQP=PP&quot;&gt;{{cite journal|last=Aaronson|first=Scott|year=2005|title=Quantum computing, postselection, and probabilistic polynomial-time|journal=Proceedings of the Royal Society A|volume=461|issue=2063|pages=3473–3482|doi=10.1098/rspa.2005.1546|arxiv=quant-ph/0412187|bibcode=2005RSPSA.461.3473A}}.  Preprint available at [https://arxiv.org/abs/quant-ph/0412187]&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://weblog.fortnow.com/2004/01/complexity-class-of-week-pp-by-guest.html|title=Complexity Class of the Week: PP|last=Aaronson|first=Scott|date=2004-01-11|work=Computational Complexity Weblog|accessdate=2008-05-02}}&lt;/ref&gt;

==See also==
* [[Hidden subgroup problem]]
* [[Polynomial hierarchy]] (PH)
* [[Quantum complexity theory]]
* '''[[QMA]]''', the quantum equivalent to '''[[NP (complexity)|NP]]'''.

==References==
{{Reflist}}

== External links ==
* [https://complexityzoo.uwaterloo.ca/Complexity_Zoo:B#bqp Complexity Zoo link to BQP]

{{quantum_computing}}
{{ComplexityClasses}}

{{DEFAULTSORT:Bqp}}
[[Category:Probabilistic complexity classes]]
[[Category:Quantum complexity theory]]
[[Category:Quantum computing]]</text>
      <sha1>jqmesd96gavjcilvbie5mwju8p8ak0c</sha1>
    </revision>
  </page>
