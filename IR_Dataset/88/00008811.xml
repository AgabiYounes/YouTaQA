  <page>
    <title>Discrete Fourier transform</title>
    <ns>0</ns>
    <id>8811</id>
    <revision>
      <id>938281314</id>
      <parentid>938281040</parentid>
      <timestamp>2020-01-30T05:47:05Z</timestamp>
      <contributor>
        <ip>68.97.61.174</ip>
      </contributor>
      <comment>/* Shift theorem */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{distinguish|text=the [[discrete-time Fourier transform]]}}
{{Fourier transforms}}

[[File:From Continuous To Discrete Fourier Transform.gif|thumb|400px|Relationship between the (continuous) [[Fourier transform]] and the discrete Fourier transform. &lt;u&gt;Left column:&lt;/u&gt; A continuous function (top) and its Fourier transform (bottom). &lt;u&gt;Center-left column:&lt;/u&gt; [[Periodic summation]] of the original function (top).  Fourier transform (bottom) is zero except at discrete points.  The inverse transform is a sum of sinusoids called [[Fourier series]].  &lt;u&gt;Center-right column:&lt;/u&gt; Original function is discretized (multiplied by a [[Dirac comb]]) (top).  Its Fourier transform (bottom) is a periodic summation ([[Discrete-time Fourier transform|DTFT]]) of the original transform. &lt;u&gt;Right column:&lt;/u&gt; The DFT (bottom) computes discrete samples of the continuous DTFT.  The inverse DFT (top) is a periodic summation of the original samples.  The [[Fast Fourier transform|FFT]] algorithm computes one cycle of the DFT and its inverse is one cycle of the DFT inverse.]]

[[File:Fourier transform, Fourier series, DTFT, DFT.svg|thumb|400px|Depiction of a Fourier transform (upper left) and its periodic summation (DTFT) in the lower left corner.  The spectral sequences at (a) upper right and (b) lower right are respectively computed from (a) one cycle of the periodic summation of s(t) and (b) one cycle of the periodic summation of the s(nT) sequence.  The respective formulas are (a) the [[Fourier series]] &lt;u&gt;integral&lt;/u&gt; and (b) the '''DFT''' &lt;u&gt;summation&lt;/u&gt;.  Its similarities to the original transform, S(f), and its relative computational ease are often the motivation for computing a DFT sequence.]]

In [[mathematics]], the '''discrete Fourier transform''' ('''DFT''') converts a finite sequence of equally-spaced [[Sampling (signal processing)|samples]] of a [[function (mathematics)|function]] into a same-length sequence of equally-spaced samples of the [[discrete-time Fourier transform]] (DTFT), which is a [[complex number|complex-valued]] function of frequency. The interval at which the DTFT is sampled is the reciprocal of the duration of the input sequence.  An inverse DFT is a [[Fourier series]], using the DTFT samples as coefficients of [[complex number|complex]] [[Sine wave|sinusoid]]s at the corresponding DTFT frequencies.  It has the same sample-values as the original input sequence.  The DFT is therefore said to be a [[frequency domain]] representation of the original input sequence.  If the original sequence spans all the non-zero values of a function, its DTFT is continuous (and periodic), and the DFT provides discrete samples of one cycle.  If the original sequence is one cycle of a periodic function, the DFT provides all the non-zero values of one DTFT cycle.

The DFT is the most important [[discrete transform]], used to perform [[Fourier analysis]] in many practical applications.&lt;ref&gt;{{cite journal|last=Strang|first=Gilbert|title=Wavelets|journal=American Scientist|date=May–June 1994|volume=82|issue=3|pages=250–255|jstor=29775194|quote=This is the most important numerical algorithm of our lifetime...}}&lt;/ref&gt;  In [[digital signal processing]], the function is any quantity or [[signal (information theory)|signal]] that varies over time, such as the pressure of a [[sound wave]], a [[radio]] signal, or daily [[temperature]] readings, sampled over a finite time interval (often defined by a [[window function]]&lt;ref&gt;{{cite journal|last=Sahidullah|first=Md.|author2=Saha, Goutam|title=A Novel Windowing Technique for Efficient Computation of MFCC for Speaker Recognition|journal=IEEE Signal Processing Letters|date=Feb 2013|volume=20|issue=2|pages=149–152|doi=10.1109/LSP.2012.2235067|arxiv = 1206.2437 |bibcode = 2013ISPL...20..149S }}&lt;/ref&gt;). In [[image processing]], the samples can be the values of [[pixel]]s along a row or column of a [[raster image]]. The DFT is also used to efficiently solve [[partial differential equations]], and to perform other operations such as [[convolution]]s or multiplying large integers.

Since it deals with a finite amount of data, it can be implemented in [[computer]]s by [[numerical algorithm]]s or even dedicated [[digital circuit|hardware]]. These implementations usually employ efficient [[fast Fourier transform]] (FFT) algorithms;&lt;ref name=colley&gt;Cooley et al., 1969&lt;/ref&gt; so much so that the terms &quot;FFT&quot; and &quot;DFT&quot; are often used interchangeably.  Prior to its current usage, the &quot;FFT&quot; [[initialism]] may have also been used for the ambiguous term &quot;[[Finite Fourier transform (disambiguation)|finite Fourier transform]]&quot;.

==Definition==
The ''discrete Fourier transform'' transforms a [[sequence]] of ''N'' [[complex number]]s &lt;math&gt;   \left \{ \mathbf{ x_n } \right \} := x_0, x_1, \ldots, x_{N-1}&lt;/math&gt; into another sequence of complex numbers,  &lt;math&gt;\left \{ \mathbf{X_k} \right \} := X_0, X_1, \ldots, X_{N-1},&lt;/math&gt; which is defined by

{{Equation box 1
|indent =
|title=
|equation = {{NumBlk|:|&lt;math&gt;\begin{align}
  X_k &amp;= \sum_{n=0}^{N-1} x_n \cdot e^{-\frac {i 2\pi}{N}kn}\\
      &amp;= \sum_{n=0}^{N-1} x_n \cdot \left[\cos\left(\frac{2 \pi}{N}kn\right) - i \cdot \sin\left(\frac{2 \pi}{N}kn\right)\right],
\end{align}&lt;/math&gt;|{{EquationRef|Eq.1}}}}
|cellpadding= 6
|border
|border colour = #0073CF
|background colour=#F5FFFA}}

where the last expression follows from the first one by [[Euler's formula]].

The transform is sometimes denoted by the symbol &lt;math&gt;\mathcal{F}&lt;/math&gt;, as in &lt;math&gt;\mathbf{X} = \mathcal{F} \left \{ \mathbf{x} \right \} &lt;/math&gt; or &lt;math&gt;\mathcal{F} \left ( \mathbf{x} \right )&lt;/math&gt; or &lt;math&gt;\mathcal{F} \mathbf{x}&lt;/math&gt;.{{
efn-ua|
As a [[linear transformation]] on a [[Dimension (vector space)|finite-dimensional vector space]], the DFT expression can also be written in terms of a [[DFT matrix]]; when scaled appropriately it becomes a [[unitary matrix]] and the ''X''&lt;sub&gt;''k''&lt;/sub&gt; can thus be viewed as coefficients of ''x'' in an [[orthonormal basis]].}}

==Motivation==
{{EquationNote|Eq.1}} can also be evaluated outside the domain &lt;math&gt;k \in [0,N-1]&lt;/math&gt;, and that extended sequence is &lt;math&gt;N&lt;/math&gt;-[[periodic sequence|periodic]]. Accordingly, other sequences of &lt;math&gt;N&lt;/math&gt; indices are sometimes used,  such as &lt;math display=&quot;inline&quot;&gt;\left[-\frac{N}{2}, \frac{N}{2} - 1\right]&lt;/math&gt; (if &lt;math&gt;N&lt;/math&gt; is even) and &lt;math display=&quot;inline&quot;&gt;\left[-\frac{N-1}{2}, \frac{N-1}{2}\right]&lt;/math&gt; (if &lt;math&gt;N&lt;/math&gt; is odd), which amounts to swapping the left and right halves of the result of the transform.
&lt;ref&gt;{{cite web|title=Shift zero-frequency component to center of spectrum – MATLAB fftshift|url=http://www.mathworks.com/help/matlab/ref/fftshift.html|website=mathworks.com|publisher=The MathWorks, Inc.|accessdate=10 March 2014|location=Natick, MA 01760}}&lt;/ref&gt;

{{EquationNote|Eq.1}} can be interpreted or derived in various ways, for example:
{{unordered list
| It completely describes the [[discrete-time Fourier transform]] (DTFT) of an &lt;math&gt;N&lt;/math&gt;-periodic sequence, which comprises only discrete frequency components. ([[Discrete-time Fourier transform#Periodic data|Using the DTFT with periodic data]])
| It can also provide uniformly spaced samples of the continuous DTFT of a finite length sequence.  ({{slink|Discrete-time Fourier transform|Sampling the DTFT|nopage=y}})
| It is the [[cross correlation]] of the ''input'' sequence, &lt;math&gt;x_n&lt;/math&gt;, and a complex sinusoid at frequency &lt;math display=&quot;inline&quot;&gt;\frac{k}{N}&lt;/math&gt;. &amp;nbsp;Thus it acts like a [[matched filter]] for that frequency.
| It is the discrete analog of the formula for the coefficients of a [[Fourier series]]:

{{NumBlk|:|&lt;math&gt;x_n = \frac{1}{N} \sum_{k=0}^{N-1} X_k \cdot e^{i 2 \pi k n / N},  \quad n\in\mathbb{Z},\,&lt;/math&gt;|{{EquationRef|Eq.2}}}}

which is also &lt;math&gt;N&lt;/math&gt;-periodic.&amp;nbsp; In the domain &amp;nbsp;{{math|''n'' ∈ [0,&amp;nbsp;''N''&amp;nbsp;−&amp;nbsp;1]}},&amp;nbsp; this is the '''inverse transform''' of {{EquationNote|Eq.1}}.&amp;nbsp; In this interpretation, each &lt;math&gt;X_k&lt;/math&gt; is a complex number that encodes both amplitude and phase of a complex sinusoidal component &lt;math&gt;(e^{i 2 \pi k n / N})&lt;/math&gt;&amp;nbsp; of function &lt;math&gt;x_n.&lt;/math&gt;  The sinusoid's [[frequency]] is ''k'' cycles per ''N'' samples.&amp;nbsp; Its amplitude and phase are:

:&lt;math&gt;\frac{1}{N}|X_k| = \frac{1}{N}\sqrt{\operatorname{Re}(X_k)^2 + \operatorname{Im}(X_k)^2}&lt;/math&gt;
:&lt;math&gt;\arg(X_k) = \operatorname{atan2}\big(\operatorname{Im}(X_k), \operatorname{Re}(X_k) \big) = -i\cdot \operatorname{ln}\left(\frac{X_k}{|X_k|}\right),&lt;/math&gt;

where [[atan2]] is the two-argument form of the [[arctan]] function. In polar form &lt;math&gt;X_k = |X_k| e^{i \arg(X_k)} = |X_k| \operatorname{cis} \arg(X_k)&lt;/math&gt; where [[Cis (mathematics)|cis]] is the mnemonic for&amp;nbsp;cos&amp;nbsp;+&amp;nbsp;''i''&amp;nbsp;sin.
}}

The normalization factor multiplying the DFT and IDFT (here 1 and &lt;math display=&quot;inline&quot;&gt;\frac{1}{N}&lt;/math&gt;) and the signs of the exponents are merely [[sign convention|conventions]], and differ in some treatments. The only requirements of these conventions are that the DFT and IDFT have opposite-sign exponents and that the product of their normalization factors be &lt;math display=&quot;inline&quot;&gt;\frac{1}{N}&lt;/math&gt;. &amp;nbsp;A normalization of &lt;math display=&quot;inline&quot;&gt;\sqrt{\frac{1}{N}}&lt;/math&gt; for both the DFT and IDFT, for instance, makes the transforms unitary. A discrete impulse, &lt;math&gt;x_n=1&lt;/math&gt; at ''n''&amp;nbsp;=&amp;nbsp;0 and 0 otherwise; might transform to &lt;math&gt;X_k = 1&lt;/math&gt; for all ''k'' (use normalization factors 1 for DFT and &lt;math display=&quot;inline&quot;&gt;\frac{1}{N}&lt;/math&gt; for IDFT). A DC signal, &lt;math&gt;X_k = 1&lt;/math&gt; at ''k''&amp;nbsp;=&amp;nbsp;0 and 0 otherwise; might inversely transform to &lt;math&gt;x_n = 1&lt;/math&gt; for all &lt;math&gt;n&lt;/math&gt; (use &lt;math display=&quot;inline&quot;&gt;\frac{1}{N}&lt;/math&gt; for DFT and 1 for IDFT) which is consistent with viewing [[Direct current|DC]] as the [[Mean#Arithmetic mean (AM)|mean average]] of the signal.

==Example==
Let &lt;math&gt;N=4&lt;/math&gt; and

: &lt;math&gt;\mathbf{x} =
\begin{pmatrix}
x_0 \\ x_1 \\ x_2 \\ x_3
\end{pmatrix}
=
\begin{pmatrix}
1 \\ 2-i \\ -i \\ -1+2i
\end{pmatrix}
&lt;/math&gt;

Here we demonstrate how to calculate the DFT of &lt;math&gt;\mathbf{x}&lt;/math&gt; using {{EquationNote|Eq.1}}:

: &lt;math&gt;X_0 = e^{-i 2 \pi 0 \cdot 0 / 4} \cdot 1 + e^{-i 2 \pi 0 \cdot 1 / 4} \cdot (2-i) + e^{-i 2 \pi 0 \cdot 2 / 4} \cdot (-i) + e^{-i 2 \pi 0 \cdot 3 / 4} \cdot (-1+2i) = 2&lt;/math&gt;

: &lt;math&gt;X_1 = e^{-i 2 \pi 1 \cdot 0 / 4} \cdot 1 + e^{-i 2 \pi 1 \cdot 1 / 4} \cdot (2-i) + e^{-i 2 \pi 1 \cdot 2 / 4} \cdot (-i) + e^{-i 2 \pi 1 \cdot 3 / 4} \cdot (-1+2i) = -2-2i&lt;/math&gt;

: &lt;math&gt;X_2 = e^{-i 2 \pi 2 \cdot 0 / 4} \cdot 1 + e^{-i 2 \pi 2 \cdot 1 / 4} \cdot (2-i) + e^{-i 2 \pi 2 \cdot 2 / 4} \cdot (-i) + e^{-i 2 \pi 2 \cdot 3 / 4} \cdot (-1+2i) = -2i&lt;/math&gt;

: &lt;math&gt;X_3 = e^{-i 2 \pi 3 \cdot 0 / 4} \cdot 1 + e^{-i 2 \pi 3 \cdot 1 / 4} \cdot (2-i) + e^{-i 2 \pi 3 \cdot 2 / 4} \cdot (-i) + e^{-i 2 \pi 3 \cdot 3 / 4} \cdot (-1+2i) = 4+4i&lt;/math&gt;

: &lt;math&gt;\mathbf{X} =
\begin{pmatrix}
X_0 \\
X_1 \\
X_2 \\
X_3
\end{pmatrix}
=
\begin{pmatrix}
2 \\
-2-2i \\
-2i \\
4+4i
\end{pmatrix}
&lt;/math&gt;

==Inverse transform==
The discrete Fourier transform is an invertible, [[linear transformation]]
:&lt;math&gt;\mathcal{F}\colon\mathbb{C}^N \to \mathbb{C}^N&lt;/math&gt;
with &lt;math&gt;\mathbb{C}&lt;/math&gt; denoting the set of [[complex number]]s. This is known as Inverse Discrete Fourier Transform(IDFT). In other words, for any &lt;math&gt;N&gt;0&lt;/math&gt;, an ''N''-dimensional complex vector has a DFT and an IDFT which are in turn &lt;math&gt;N&lt;/math&gt;-dimensional complex vectors.

The inverse transform is given by:
{{Equation box 1
|indent =
|title=
|equation = {{NumBlk|:|&lt;math&gt;
x_n = \frac{1}{N} \sum_{k=0}^{N-1} X_k\cdot e^{i 2 \pi k n / N}
&lt;/math&gt;|{{EquationRef|Eq.3}}}}
|cellpadding= 6
|border
|border colour = #0073CF
|background colour=#F5FFFA}}

==Properties==

===Linearity===
The DFT is a linear transform, i.e. if &lt;math&gt;\mathcal{F}(\{x_n\})_k=X_k&lt;/math&gt; and &lt;math&gt;\mathcal{F}(\{y_n\})_k=Y_k&lt;/math&gt;, then for any complex numbers &lt;math&gt;a,b&lt;/math&gt;:
:&lt;math&gt;\mathcal{F}(\{a x_n + b y_n\})_k=a X_k + b Y_k&lt;/math&gt;

===Time and frequency reversal===
Reversing the time (i.e. replacing &lt;math&gt;n&lt;/math&gt; by &lt;math&gt;N-n&lt;/math&gt;){{
efn-ua|Time reversal for the DFT means replacing &lt;math&gt;n&lt;/math&gt; by &lt;math&gt;N-n&lt;/math&gt; and not &lt;math&gt;n&lt;/math&gt; by &lt;math&gt;-n&lt;/math&gt; to avoid negative indices.
}} in &lt;math&gt;x_n&lt;/math&gt; corresponds to reversing the frequency (i.e. &lt;math&gt;k&lt;/math&gt; by &lt;math&gt;N-k&lt;/math&gt;).&lt;ref name=ProakisManolakis&gt;{{Citation | last =Proakis | first =John G. | last2 =Manolakis | first2 =Dimitri G. | title =Digital Signal Processing: Principles, Algorithms and Applications | place =Upper Saddle River, NJ | publisher =Prentice-Hall International | year =1996 | edition =3 | language =English | id =sAcfAQAAIAAJ | isbn =9780133942897 | bibcode =1996dspp.book.....P | url-access =registration | url =https://archive.org/details/digitalsignalpro00proa }}&lt;/ref&gt;{{rp|p. 421}} Mathematically, if &lt;math&gt;\{x_n\}&lt;/math&gt; represents the vector '''x''' then

:if &lt;math&gt;\mathcal{F}(\{x_n\})_k=X_k&lt;/math&gt;
:then &lt;math&gt;\mathcal{F}(\{ x_{N-n} \})_k=X_{N-k}&lt;/math&gt;

===Conjugation in time===
If &lt;math&gt;\mathcal{F}(\{x_n\})_k=X_k&lt;/math&gt; then &lt;math&gt;\mathcal{F}(\{ x_n^* \})_k=X_{N-k}^*&lt;/math&gt;.&lt;ref name=ProakisManolakis/&gt;{{rp|p. 423}}

===Real and imaginary part===
This table shows some mathematical operations on &lt;math&gt;x_n&lt;/math&gt; in the time domain and the corresponding effects on its DFT &lt;math&gt;X_k&lt;/math&gt; in the frequency domain.

{| class=&quot;wikitable&quot;
|-
! Property
! Time domain&lt;br/&gt;&lt;math&gt;x_n&lt;/math&gt;
! Frequency domain&lt;br/&gt;&lt;math&gt;X_k&lt;/math&gt;
|-
| Real part in time
| &lt;math&gt;\Re{\left(x_n\right)}&lt;/math&gt;
| &lt;math&gt;\frac{1}{2}\left(X_k + X^*_{N-k}\right)&lt;/math&gt;
|-
| Imaginary part in time
| &lt;math&gt;\Im{\left(x_n\right)}&lt;/math&gt;
| &lt;math&gt;\frac{1}{2i}\left(X_k - X^*_{N-k}\right)&lt;/math&gt;
|-
| Real part in frequency
| &lt;math&gt;\frac{1}{2}\left(x_n + x^*_{N-n}\right)&lt;/math&gt;
| &lt;math&gt;\Re{\left(X_k\right)}&lt;/math&gt;
|-
| Imaginary part in frequency
| &lt;math&gt;\frac{1}{2i}\left(x_n - x^*_{N-n}\right)&lt;/math&gt;
| &lt;math&gt;\Im{\left(X_k\right)}&lt;/math&gt;
|}

=== Orthogonality ===
The vectors &lt;math&gt;u_k = \left[\left. e^{ \frac{i 2\pi}{N} kn} \;\right|\; n=0,1,\ldots,N-1 \right]^\mathsf{T}&lt;/math&gt; 
form an [[orthogonal basis]] over the set of ''N''-dimensional complex vectors:

:&lt;math&gt;u^\mathsf{T}_k u_{k'}^* 
 = \sum_{n=0}^{N-1} \left(e^{ \frac{i 2\pi}{N} kn}\right) \left(e^{\frac{i 2\pi}{N} (-k')n}\right)
 = \sum_{n=0}^{N-1} e^{ \frac{i 2\pi}{N} (k-k') n} 
 = N~\delta_{kk'}
&lt;/math&gt;

where &lt;math&gt;~\delta_{kk'}&lt;/math&gt; is the [[Kronecker delta]]. (In the last step, the summation is trivial if &lt;math&gt;k=k'&lt;/math&gt;, where it is 1+1+⋅⋅⋅=''N'', and otherwise is a [[geometric series]] that can be explicitly summed to obtain zero.)  This orthogonality condition can be used to derive the formula for the IDFT from the definition of the DFT, and is equivalent to the unitarity property below.

=== The Plancherel theorem and Parseval's theorem ===
If &lt;math&gt;X_k&lt;/math&gt; and &lt;math&gt;Y_k&lt;/math&gt; are the DFTs of &lt;math&gt;x_n&lt;/math&gt; and &lt;math&gt;y_n&lt;/math&gt; respectively then the [[Parseval's theorem]] states:

:&lt;math&gt;\sum_{n=0}^{N-1} x_n y^*_n = \frac{1}{N} \sum_{k=0}^{N-1} X_k Y^*_k&lt;/math&gt;

where the star denotes [[Complex conjugate|complex conjugation]].  [[Plancherel theorem]] is a special case of the Parseval's theorem and states:

:&lt;math&gt;\sum_{n=0}^{N-1} |x_n|^2 = \frac{1}{N} \sum_{k=0}^{N-1} |X_k|^2.&lt;/math&gt;

These theorems are also equivalent to the unitary condition below.

===Periodicity===
The periodicity can be shown directly from the definition:

: &lt;math&gt;X_{k+N} \ \triangleq \ \sum_{n=0}^{N-1} x_n e^{-\frac{i 2\pi}{N} (k+N) n} =
\sum_{n=0}^{N-1} x_n e^{-\frac{i 2\pi}{N} k n}  \underbrace{e^{-i 2 \pi n}}_{1} = \sum_{n=0}^{N-1} x_n e^{-\frac{i 2\pi}{N} k n} = X_k. &lt;/math&gt;

Similarly, it can be shown that the IDFT formula leads to a periodic extension.

===Shift theorem===
Multiplying &lt;math&gt;x_n&lt;/math&gt; by a ''linear phase'' &lt;math&gt;e^{\frac{i 2\pi (n-1)}{N} m}&lt;/math&gt; for some integer ''m'' corresponds to a ''circular shift'' of the output &lt;math&gt;X_k&lt;/math&gt;: &lt;math&gt;X_k&lt;/math&gt; is replaced by &lt;math&gt;X_{k-m}&lt;/math&gt;, where the subscript is interpreted [[modular arithmetic|modulo]] ''N'' (i.e., periodically).  Similarly, a circular shift of the input &lt;math&gt;x_n&lt;/math&gt; corresponds to multiplying the output &lt;math&gt;X_k&lt;/math&gt; by a linear phase. Mathematically, if &lt;math&gt;\{x_n\}&lt;/math&gt; represents the vector '''x''' then

:if &lt;math&gt;\mathcal{F}(\{x_n\})_k=X_k&lt;/math&gt;

:then &lt;math&gt;\mathcal{F}\left(\left\{ x_n \cdot e^{\frac{i 2\pi}{N}n m} \right\}\right)_k=X_{k-m}&lt;/math&gt;

:and &lt;math&gt;\mathcal{F}\left(\left\{x_{n-m}\right\}\right)_k=X_k \cdot e^{-\frac{i 2\pi}{N}k m}&lt;/math&gt;

===Circular convolution theorem and cross-correlation theorem===
{{anchor|Circular convolution theorem}}
{{anchor|Cross-correlation theorem}}

The [[DTFT#Convolution|convolution theorem]] for the [[discrete-time Fourier transform]] indicates that a convolution of two infinite sequences can be obtained as the inverse transform of the product of the individual transforms. An important simplification occurs when the sequences are of finite length, &lt;math&gt;N&lt;/math&gt;.  In terms of the DFT and inverse DFT, it can be written as follows''':'''

:&lt;math&gt;
\mathcal{F}^{-1} \left \{ \mathbf{X\cdot Y} \right \}_n \ = \sum_{\ell=0}^{N-1}x_\ell \cdot (y_N)_{n-\ell} \ \ \triangleq \ \ (\mathbf{x * y_N})_n\ ,
&lt;/math&gt;

which is the convolution of the &lt;math&gt;\mathbf{x}&lt;/math&gt; sequence with a &lt;math&gt;\mathbf{y}&lt;/math&gt; sequence extended by [[periodic summation]]''':'''

:&lt;math&gt;(\mathbf{y_N})_n \ \triangleq \ \sum_{p=-\infty}^\infty y_{(n-pN)} = y_{n \pmod N}. \,&lt;/math&gt;

Similarly, the [[cross-correlation]] of &amp;nbsp;&lt;math&gt;\mathbf{x}&lt;/math&gt;&amp;nbsp; and &amp;nbsp;&lt;math&gt;\mathbf{y_N}&lt;/math&gt;&amp;nbsp; is given by''':'''

:&lt;math&gt;
\mathcal{F}^{-1} \left \{ \mathbf{X^* \cdot Y} \right \}_n
= \sum_{\ell=0}^{N-1}x_\ell^* \cdot (y_N)_{n+\ell} \ \ \triangleq \ \ (\mathbf{x \star y_N})_n\ .
&lt;/math&gt;

When either sequence contains a string of zeros, of length &lt;math&gt;L&lt;/math&gt;,&amp;nbsp; &lt;math&gt;L+1&lt;/math&gt; of the circular convolution outputs are equivalent to values of &amp;nbsp;&lt;math&gt;\mathbf{x * y}.&lt;/math&gt;&amp;nbsp; Methods have also been developed to use this property as part of an efficient process that constructs &amp;nbsp;&lt;math&gt;\mathbf{x * y}&lt;/math&gt;&amp;nbsp; with an &lt;math&gt;\mathbf{x}&lt;/math&gt; or &lt;math&gt;\mathbf{y}&lt;/math&gt; sequence potentially much longer than the practical transform size (&lt;math&gt;N&lt;/math&gt;). Two such methods are called [[overlap-save method|overlap-save]] and [[overlap-add method|overlap-add]].&lt;ref&gt;T. G. Stockham, Jr., &quot;[http://dl.acm.org/citation.cfm?id=1464209 High-speed convolution and correlation],&quot; in 1966 ''Proc. AFIPS Spring Joint Computing Conf.'' Reprinted in Digital Signal Processing, L. R. Rabiner and C. M. Rader, editors, New York: IEEE Press, 1972.&lt;/ref&gt;  The efficiency results from the fact that a direct evaluation of either summation (above) requires &lt;math&gt;\scriptstyle O(N^2)&lt;/math&gt; operations for an output sequence of length &lt;math&gt;N&lt;/math&gt;. An indirect method, using transforms, can take advantage of the &lt;math&gt;\scriptstyle O(N\log N)&lt;/math&gt; efficiency of the [[fast Fourier transform]] (FFT) to achieve much better performance.  Furthermore, convolutions can be used to efficiently compute DFTs via [[Rader's FFT algorithm]] and [[Bluestein's FFT algorithm]].

=== Convolution theorem duality ===

It can also be shown that''':'''

:&lt;math&gt;
\mathcal{F} \left \{ \mathbf{x\cdot y} \right \}_k \ \triangleq
\sum_{n=0}^{N-1} x_n \cdot y_n \cdot e^{-i \frac{2\pi}{N} k n}
&lt;/math&gt;
::&lt;math&gt;=\frac{1}{N} (\mathbf{X * Y_N})_k, \,&lt;/math&gt; &amp;nbsp; which is the circular convolution of &lt;math&gt;\mathbf{X}&lt;/math&gt; and &lt;math&gt;\mathbf{Y}&lt;/math&gt;.

===Trigonometric interpolation polynomial===
The [[trigonometric interpolation polynomial]]
:&lt;math&gt;p(t) = \begin{cases}
  \frac{1}{N} \left[ X_0 + X_1 e^{i 2\pi t} + \cdots + X_{N/2-1} e^{i(N/2-1) 2\pi t} + X_{N/2} \cos(N\pi t) + X_{N/2+1} e^{i(-N/2+1) 2\pi t} + \cdots + X_{N-1} e^{-i 2\pi t} \right]
  &amp; N\text{ even} \\
  \frac{1}{N} \left[ X_0 + X_1 e^{i 2\pi t} + \cdots + X_{\lfloor N/2 \rfloor} e^{i \lfloor N/2 \rfloor 2\pi t} + X_{\lfloor N/2 \rfloor+1} e^{-i \lfloor N/2 \rfloor 2\pi t} + \cdots + X_{N-1} e^{-i 2\pi t} \right]
  &amp; N\text{ odd}
\end{cases}&lt;/math&gt;

where the coefficients ''X''&lt;sub&gt;''k''&lt;/sub&gt; are given by the DFT of ''x''&lt;sub&gt;''n''&lt;/sub&gt; above, satisfies the interpolation property &lt;math&gt;p(n/N) = x_n&lt;/math&gt; for &lt;math&gt;n=0,\ldots,N-1&lt;/math&gt;.

For even ''N'', notice that the [[Nyquist frequency|Nyquist component]] &lt;math&gt;\frac{X_{N/2}}{N} \cos(N\pi t)&lt;/math&gt; is handled specially.

This interpolation is ''not unique'': aliasing implies that one could add ''N'' to any of the complex-sinusoid frequencies (e.g. changing &lt;math&gt;e^{-it}&lt;/math&gt; to &lt;math&gt;e^{i(N-1)t}&lt;/math&gt; ) without changing the interpolation property, but giving ''different'' values in between the &lt;math&gt;x_n&lt;/math&gt; points.  The choice above, however, is typical because it has two useful properties.  First, it consists of sinusoids whose frequencies have the smallest possible magnitudes: the interpolation is [[bandlimited]]. Second, if the  &lt;math&gt;x_n&lt;/math&gt; are real numbers, then &lt;math&gt;p(t)&lt;/math&gt; is real as well.

In contrast, the most obvious trigonometric interpolation polynomial is the one in which the frequencies range from 0 to &lt;math&gt;N-1&lt;/math&gt; (instead of roughly &lt;math&gt;-N/2&lt;/math&gt; to &lt;math&gt;+N/2&lt;/math&gt; as above), similar to the inverse DFT formula. This interpolation does ''not'' minimize the slope, and is ''not'' generally real-valued for real &lt;math&gt;x_n&lt;/math&gt;; its use is a common mistake.

=== The unitary DFT ===
Another way of looking at the DFT is to note that in the above discussion, the DFT can be expressed as the [[DFT matrix]], a [[Vandermonde matrix]], 
[[Generalizations of Pauli matrices#Construction: The clock and shift matrices|introduced by Sylvester]] in 1867,
:&lt;math&gt;\mathbf{F} =
\begin{bmatrix}
 \omega_N^{0 \cdot 0}     &amp; \omega_N^{0 \cdot 1}     &amp; \ldots &amp; \omega_N^{0 \cdot (N-1)}     \\
 \omega_N^{1 \cdot 0}     &amp; \omega_N^{1 \cdot 1}     &amp; \ldots &amp; \omega_N^{1 \cdot (N-1)}     \\
 \vdots                   &amp; \vdots                   &amp; \ddots &amp; \vdots                       \\
 \omega_N^{(N-1) \cdot 0} &amp; \omega_N^{(N-1) \cdot 1} &amp; \ldots &amp; \omega_N^{(N-1) \cdot (N-1)} \\
\end{bmatrix}
&lt;/math&gt;
where &lt;math&gt;\omega_N = e^{-i 2 \pi/N}&lt;/math&gt; is a primitive [[roots of unity|''N''th root of unity]].

The inverse transform is then given by the inverse of the above matrix,
:&lt;math&gt;\mathbf{F}^{-1}=\frac{1}{N}\mathbf{F}^*&lt;/math&gt;

With [[unitary operator|unitary]] normalization constants &lt;math&gt;1/\sqrt{N}&lt;/math&gt;, the DFT becomes a [[unitary transformation]], defined by a unitary matrix:

:&lt;math&gt;\begin{align}
          \mathbf{U} &amp;= \frac{1}{\sqrt{N}}\mathbf{F} \\
     \mathbf{U}^{-1} &amp;= \mathbf{U}^* \\
  |\det(\mathbf{U})| &amp;= 1
\end{align}&lt;/math&gt;

where &lt;math&gt;\det()&lt;/math&gt; is the [[determinant]] function. The determinant is the product of the eigenvalues, which are always &lt;math&gt;\pm 1&lt;/math&gt; or &lt;math&gt;\pm i&lt;/math&gt; as described below.  In a real vector space, a unitary transformation can be thought of as simply a rigid rotation of the coordinate system, and all of the properties of a rigid rotation can be found in the unitary DFT.

The orthogonality of the DFT is now expressed as an [[orthonormal]]ity condition (which arises in many areas of mathematics as described in [[root of unity]]):
:&lt;math&gt;\sum_{m=0}^{N-1}U_{km}U_{mn}^* = \delta_{kn}&lt;/math&gt;

If '''X'''  is defined as the unitary DFT of the vector '''x''', then
:&lt;math&gt;X_k=\sum_{n=0}^{N-1} U_{kn} x_n&lt;/math&gt;

and the [[Parseval's theorem]] is expressed as
:&lt;math&gt;\sum_{n=0}^{N-1}x_n y_n^* = \sum_{k=0}^{N-1}X_k Y_k^*&lt;/math&gt;

If we view the DFT as just a coordinate transformation which simply specifies the components of a vector in a new coordinate system, then the above is just the statement that the dot product of two vectors is preserved under a unitary DFT transformation. For the special case &lt;math&gt;\mathbf{x} = \mathbf{y}&lt;/math&gt;, this implies that the length of a vector is preserved as well — this is just [[Plancherel theorem]],
:&lt;math&gt;\sum_{n=0}^{N-1}|x_n|^2 = \sum_{k=0}^{N-1}|X_k|^2&lt;/math&gt;

A consequence of the [[Discrete Fourier transform#Circular convolution theorem and cross-correlation theorem|circular convolution theorem]] is that the DFT matrix {{mvar|F}} diagonalizes any [[circulant matrix]].

=== Expressing the inverse DFT in terms of the DFT ===
A useful property of the DFT is that the inverse DFT can be easily expressed in terms of the (forward) DFT, via several well-known &quot;tricks&quot;.  (For example, in computations, it is often convenient to only implement a fast Fourier transform corresponding to one transform direction and then to get the other transform direction from the first.)

First, we can compute the inverse DFT by reversing all but one of the inputs (Duhamel ''et al.'', 1988):

:&lt;math&gt;\mathcal{F}^{-1}(\{x_n\}) = \frac{1}{N}\mathcal{F}(\{x_{N - n}\})&lt;/math&gt;

(As usual, the subscripts are interpreted [[modular arithmetic|modulo]] ''N''; thus, for &lt;math&gt;n = 0&lt;/math&gt;, we have &lt;math&gt;x_{N-0} = x_0&lt;/math&gt;.)

Second, one can also conjugate the inputs and outputs:

:&lt;math&gt;\mathcal{F}^{-1}(\mathbf{x}) = \frac{1}{N}\mathcal{F}\left(\mathbf{x}^*\right)^*&lt;/math&gt;

Third, a variant of this conjugation trick, which is sometimes preferable because it requires no modification of the data values, involves swapping real and imaginary parts (which can be done on a computer simply by modifying [[pointer (computer programming)|pointer]]s). Define &lt;math display=&quot;inline&quot;&gt;\operatorname{swap}(x_n)&lt;/math&gt; as &lt;math&gt;x_n&lt;/math&gt; with its real and imaginary parts swapped—that is, if &lt;math&gt;x_n = a + b i&lt;/math&gt; then &lt;math display=&quot;inline&gt;\operatorname{swap}(x_n)&lt;/math&gt; is &lt;math&gt;b + a i&lt;/math&gt;.  Equivalently, &lt;math display=&quot;inline}&gt;\operatorname{swap}(x_n)&lt;/math&gt; equals &lt;math&gt;i x_n^*&lt;/math&gt;.  Then

:&lt;math&gt;\mathcal{F}^{-1}(\mathbf{x}) = \frac{1}{N}\operatorname{swap}(\mathcal{F}(\operatorname{swap}(\mathbf{x})))&lt;/math&gt;

That is, the inverse transform is the same as the forward transform with the real and imaginary parts swapped for both input and output, up to a normalization (Duhamel ''et al.'', 1988).

The conjugation trick can also be used to define a new transform, closely related to the DFT, that is [[Involution (mathematics)|involutory]]—that is, which is its own inverse.  In particular, &lt;math&gt;T(\mathbf{x}) = \mathcal{F}\left(\mathbf{x}^*\right) / \sqrt{N}&lt;/math&gt; is clearly its own inverse: &lt;math&gt;T(T(\mathbf{x})) = \mathbf{x}&lt;/math&gt;.  A closely related involutory transformation (by a factor of {{nowrap|(1 + ''i'')/{{radic|2}}}}) is &lt;math&gt;H(\mathbf{x}) = \mathcal{F}\left((1 + i) \mathbf{x}^*\right) / \sqrt{2N}&lt;/math&gt;, since the &lt;math&gt;(1 + i)&lt;/math&gt; factors in &lt;math&gt;H(H(\mathbf{x}))&lt;/math&gt; cancel the 2.  For real inputs &lt;math&gt;\mathbf{x}&lt;/math&gt;, the real part of &lt;math&gt;H(\mathbf{x})&lt;/math&gt; is none other than the [[discrete Hartley transform]], which is also involutory.

=== Eigenvalues and eigenvectors ===

The [[eigenvalue]]s of the DFT matrix are simple and well-known, whereas the [[eigenvector]]s are complicated, not unique, and are the subject of ongoing research.

Consider the unitary form &lt;math&gt;\mathbf{U}&lt;/math&gt; defined above for the DFT of length ''N'', where
:&lt;math&gt;\mathbf{U}_{m,n} = \frac1{\sqrt{N}}\omega_N^{(m-1)(n-1)} = \frac1{\sqrt{N}}e^{-\frac{i 2\pi}N (m-1)(n-1)}.&lt;/math&gt;
This matrix satisfies the [[matrix polynomial]] equation:
:&lt;math&gt;\mathbf{U}^4 = \mathbf{I}.&lt;/math&gt;
This can be seen from the inverse properties above: operating &lt;math&gt;\mathbf{U}&lt;/math&gt; twice gives the original data in reverse order, so operating &lt;math&gt;\mathbf{U}&lt;/math&gt; four times gives back the original data and is thus the [[identity matrix]].  This means that the eigenvalues &lt;math&gt;\lambda&lt;/math&gt; satisfy the equation:
:&lt;math&gt;\lambda^4 = 1.&lt;/math&gt;
Therefore, the eigenvalues of &lt;math&gt;\mathbf{U}&lt;/math&gt; are the fourth [[roots of unity]]: &lt;math&gt;\lambda&lt;/math&gt; is +1, −1, +''i'',  or −''i''.

Since there are only four distinct eigenvalues for this &lt;math&gt;N\times N&lt;/math&gt; matrix, they have some [[algebraic multiplicity|multiplicity]].  The multiplicity gives the number of [[linearly independent]] eigenvectors corresponding to each eigenvalue.  (There are ''N'' independent eigenvectors; a unitary matrix is never [[defective matrix|defective]].)

The problem of their multiplicity was solved by McClellan and Parks (1972), although it was later shown to have been equivalent to a problem solved by [[Carl Friedrich Gauss|Gauss]] (Dickinson and Steiglitz, 1982).  The multiplicity depends on the value of ''N'' [[modular arithmetic|modulo]] 4, and is given by the following table:

{| class=&quot;wikitable&quot; style=&quot;margin:auto;&quot;
|+ align=&quot;bottom&quot; | Multiplicities of the eigenvalues λ of the unitary DFT matrix '''U''' as a function of the transform size ''N'' (in terms of an integer ''m'').
|-
! size ''N''
! λ = +1
! λ = −1
! λ = −''i''
! λ = +''i''
|-
|    4''m''  ||  ''m'' + 1  ||  ''m''  ||  ''m''  ||  ''m'' − 1
|-
|    4''m'' + 1  ||  ''m'' + 1  ||  ''m''  ||  ''m''  ||  ''m''
|-
|    4''m'' + 2  ||  ''m'' + 1  ||  ''m'' + 1  ||  ''m''  ||  ''m''
|-
|    4''m'' + 3  ||  ''m'' + 1  ||  ''m'' + 1  ||  ''m'' + 1  ||  ''m''
|}

Otherwise stated, the [[characteristic polynomial]] of &lt;math&gt;\mathbf{U}&lt;/math&gt; is:
:&lt;math&gt;\det (\lambda I - \mathbf{U})=
(\lambda-1)^{\left\lfloor \tfrac {N+4}{4}\right\rfloor}
(\lambda+1)^{\left\lfloor \tfrac {N+2}{4}\right\rfloor}
(\lambda+i)^{\left\lfloor \tfrac {N+1}{4}\right\rfloor}
(\lambda-i)^{\left\lfloor \tfrac {N-1}{4}\right\rfloor}.&lt;/math&gt;

No simple analytical formula for general eigenvectors is known.   Moreover, the eigenvectors are not unique because any linear combination of eigenvectors for the same eigenvalue is also an eigenvector for that eigenvalue.  Various researchers have proposed different choices of eigenvectors, selected to satisfy useful properties like [[orthogonality]] and to have &quot;simple&quot; forms (e.g., McClellan and Parks, 1972; Dickinson and Steiglitz, 1982; Grünbaum, 1982; Atakishiyev and Wolf, 1997; Candan ''et al.'', 2000; Hanna ''et al.'', 2004; Gurevich and Hadani, 2008).

A straightforward approach is to discretize an eigenfunction of the continuous [[Fourier transform]],
of which the most famous is the [[Gaussian function]].
Since [[periodic summation]] of the function means discretizing its frequency spectrum
and discretization means periodic summation of the spectrum,
the discretized and periodically summed Gaussian function yields an eigenvector of the discrete transform:
*&lt;math&gt;F(m) = \sum_{k\in\mathbb{Z}} \exp\left(-\frac{\pi\cdot(m+N\cdot k)^2}{N}\right)&lt;/math&gt;.

The closed form expression for the series can be expressed by [[Jacobi theta function]]s as

*&lt;math&gt;F(m) = \frac1{\sqrt{N}}\vartheta_3\left(\frac{\pi m}N, \exp\left(-\frac{\pi}N \right)\right)&lt;/math&gt;.

Two other simple closed-form analytical eigenvectors for special DFT period ''N'' were found (Kong, 2008):

For DFT period ''N'' = 2''L'' + 1 = 4''K'' + 1, where ''K'' is an integer, the following is an eigenvector of DFT:
*&lt;math&gt;F(m)=\prod_{s=K+1}^L\left[\cos\left(\frac{2\pi}{N}m\right)- \cos\left(\frac{2\pi}{N}s\right)\right]&lt;/math&gt;

For DFT period ''N'' = 2''L'' = 4''K'', where ''K'' is an integer, the following is an eigenvector of DFT:
*&lt;math&gt;F(m)=\sin\left(\frac{2\pi}{N}m\right)\prod_{s=K+1}^{L-1}\left[\cos\left(\frac{2\pi}{N}m\right)- \cos\left(\frac{2\pi}{N}s\right)\right]&lt;/math&gt;

The choice of eigenvectors of the DFT matrix has become important in recent years in order to define a discrete analogue of the [[fractional Fourier transform]]—the DFT matrix can be taken to fractional powers by exponentiating the eigenvalues (e.g., Rubio and Santhanam, 2005).  For the [[continuous Fourier transform]], the natural orthogonal eigenfunctions are the [[Hermite function]]s, so various discrete analogues of these have been employed as the eigenvectors of the DFT, such as the [[Kravchuk polynomials]] (Atakishiyev and Wolf, 1997).  The &quot;best&quot; choice of eigenvectors to define a fractional discrete Fourier transform remains an open question, however.

=== Uncertainty principles ===
==== Probabilistic uncertainty principle ====
If the random variable {{math|''X''&lt;sub&gt;''k''&lt;/sub&gt;}} is constrained by
:&lt;math&gt;\sum_{n=0}^{N-1}|X_n|^2=1  ~,&lt;/math&gt;
then 
:&lt;math&gt;P_n=|X_n|^2&lt;/math&gt; 
may be considered to represent a discrete [[probability mass function]] of {{mvar|n}}, with an associated probability mass function constructed from the transformed variable,
:&lt;math&gt;Q_m=N|x_m|^2 ~.&lt;/math&gt;

For the case of continuous functions &lt;math&gt;P(x)&lt;/math&gt; and &lt;math&gt;Q(k)&lt;/math&gt;, the [[Heisenberg uncertainty principle]] states that
:&lt;math&gt;D_0(X)D_0(x)\ge\frac{1}{16\pi^2}&lt;/math&gt;
where  &lt;math&gt;D_0(X)&lt;/math&gt; and &lt;math&gt;D_0(x)&lt;/math&gt; are the variances of &lt;math&gt;|X|^2&lt;/math&gt; and &lt;math&gt;|x|^2&lt;/math&gt; respectively, with the equality attained in the case of a suitably normalized [[Gaussian distribution]]. Although the variances may be analogously defined for the DFT, an analogous uncertainty principle is not useful, because the uncertainty will not be shift-invariant. Still, a meaningful uncertainty principle has been introduced by Massar and Spindel.&lt;ref&gt;{{Cite journal | last1 = Massar | first1 = S. | last2 = Spindel | first2 = P. | doi = 10.1103/PhysRevLett.100.190401 | title = Uncertainty Relation for the Discrete Fourier Transform | journal = Physical Review Letters | volume = 100 | issue = 19 | year = 2008 | pmid =  18518426| pmc = |arxiv = 0710.0723 |bibcode = 2008PhRvL.100s0401M | page=190401}}&lt;/ref&gt;

However, the Hirschman [[entropic uncertainty]] will have a useful analog for the case of the DFT.&lt;ref name=&quot;DeBrunner&quot;&gt;{{cite journal |last1=DeBrunner |first1=Victor |last2=Havlicek |first2=Joseph P. |last3=Przebinda |first3=Tomasz|last4=Özaydin |first4=Murad|year=2005 |title=Entropy-Based Uncertainty Measures for &lt;math&gt;L^2(\mathbb{R}^n),\ell^2(\mathbb{Z})&lt;/math&gt;, and &lt;math&gt;\ell^2(\mathbb{Z}/N\mathbb{Z})&lt;/math&gt; With a Hirschman Optimal Transform for &lt;math&gt;\ell^2(\mathbb{Z}/N\mathbb{Z})&lt;/math&gt; |journal=IEEE Transactions on Signal Processing |volume=53 |issue=8 |page=2690 |doi=  10.1109/TSP.2005.850329|url=http://redwood.berkeley.edu/w/images/9/95/2002-26.pdf |accessdate=2011-06-23 |bibcode = 2005ITSP...53.2690D }}&lt;/ref&gt; The Hirschman uncertainty principle is expressed in terms of the [[Entropy (information theory)|Shannon entropy]] of the two probability functions.

In the discrete case, the Shannon entropies are defined as
:&lt;math&gt;H(X)=-\sum_{n=0}^{N-1} P_n\ln P_n&lt;/math&gt;
and
:&lt;math&gt;H(x)=-\sum_{m=0}^{N-1} Q_m\ln Q_m ~,&lt;/math&gt;
and the [[entropic uncertainty]] principle becomes&lt;ref name=&quot;DeBrunner&quot;/&gt;
:&lt;math&gt;H(X)+H(x) \ge \ln(N) ~.&lt;/math&gt;

The equality is obtained for &lt;math&gt;P_n&lt;/math&gt; equal to translations and modulations of a suitably normalized [[Kronecker comb]] of period &lt;math&gt;A&lt;/math&gt; where &lt;math&gt;A&lt;/math&gt; is any exact integer divisor of &lt;math&gt;N&lt;/math&gt;. The probability mass function &lt;math&gt;Q_m&lt;/math&gt; will then be proportional to a suitably translated [[Kronecker comb]] of period &lt;math&gt;B=N/A&lt;/math&gt;.&lt;ref name=&quot;DeBrunner&quot;/&gt;

==== Deterministic uncertainty principle ====
There is also a well-known deterministic uncertainty principle that uses signal sparsity (or the number of non-zero coefficients).&lt;ref name=&quot;Donoho&quot;&gt;{{cite journal |last1=Donoho |first1=D.L. |last2=Stark |first2=P.B |year=1989 |title=Uncertainty principles and signal recovery |journal=SIAM Journal on Applied Mathematics |volume=49 |issue=3 |pages=906–931 |doi=10.1137/0149053|url=https://semanticscholar.org/paper/6302c0103e1fe99b3160220e8019680ceed37253 }}&lt;/ref&gt; Let &lt;math&gt;\|x\|_0&lt;/math&gt; and &lt;math&gt;\|X\|_0&lt;/math&gt; be the number of non-zero elements of the time and frequency sequences &lt;math&gt;x_0,x_1,\ldots,x_{N-1}&lt;/math&gt; and &lt;math&gt;X_0,X_1,\ldots,X_{N-1}&lt;/math&gt;, respectively. Then, 
:&lt;math&gt;N\leq \|x\|_0 \cdot \|X\|_0.&lt;/math&gt;
As an immediate consequence of the [[Arithmetic–geometric mean|inequality of arithmetic and geometric means]], one also has &lt;math&gt;2\sqrt{N}\leq\|x\|_0+\|X\|_0&lt;/math&gt;. Both uncertainty principles were shown to be tight for specifically-chosen &quot;picket-fence&quot; sequences (discrete impulse trains), and find practical use for signal recovery applications.&lt;ref name=&quot;Donoho&quot;/&gt;

=== DFT of real and purely imaginary signals ===
*If &lt;math&gt;x_0, \ldots, x_{N-1}&lt;/math&gt; are [[real number]]s, as they often are in practical applications, then the DFT &lt;math&gt;X_0, \ldots, X_{N-1}&lt;/math&gt; is [[Even and odd functions|even symmetric]]:
:&lt;math&gt;x_n \in \mathbb{R} \quad \forall n \in \{0,\ldots,N-1 \} \implies X_k = X_{-k \mod N}^* \quad \forall k \in \{0,\ldots,N-1 \}&lt;/math&gt;, where &lt;math&gt;X^*\,&lt;/math&gt; denotes [[Complex conjugate|complex conjugation]].

It follows that for even &lt;math&gt;N&lt;/math&gt; &lt;math&gt;X_0&lt;/math&gt; and &lt;math&gt;X_{N/2}&lt;/math&gt; are real-valued, and the remainder of the DFT is completely specified by just &lt;math&gt;N/2-1&lt;/math&gt; complex numbers.

*If &lt;math&gt;x_0, \ldots, x_{N-1}&lt;/math&gt; are purely imaginary numbers, then the DFT &lt;math&gt;X_0, \ldots, X_{N-1}&lt;/math&gt; is [[Even and odd functions|odd symmetric]]:
:&lt;math&gt;x_n \in i \mathbb{R} \quad \forall n \in \{0,\ldots,N-1 \} \implies X_k = -X_{-k \mod N}^* \quad \forall k \in \{0,\ldots,N-1 \}&lt;/math&gt;, where &lt;math&gt;X^*\,&lt;/math&gt; denotes [[Complex conjugate|complex conjugation]].

==Generalized DFT (shifted and non-linear phase)==
It is possible to shift the transform sampling in time and/or frequency domain by some real shifts ''a'' and ''b'', respectively. This is sometimes known as a '''generalized DFT''' (or '''GDFT'''), also called the '''shifted DFT''' or '''offset DFT''', and has analogous properties to the ordinary DFT:

:&lt;math&gt;X_k = \sum_{n=0}^{N-1} x_n e^{-\frac{i 2 \pi}{N} (k+b) (n+a)} \quad \quad k = 0, \dots, N-1.&lt;/math&gt;

Most often, shifts of &lt;math&gt;1/2&lt;/math&gt; (half a sample) are used.
While the ordinary DFT corresponds to a periodic signal in both time and frequency domains, &lt;math&gt;a=1/2&lt;/math&gt; produces a signal that is anti-periodic in frequency domain (&lt;math&gt;X_{k+N} = - X_k&lt;/math&gt;) and vice versa for &lt;math&gt;b=1/2&lt;/math&gt;.
Thus, the specific case of &lt;math&gt;a = b = 1/2&lt;/math&gt; is known as an ''odd-time odd-frequency'' discrete Fourier transform (or O&lt;sup&gt;2&lt;/sup&gt; DFT).
Such shifted transforms are most often used for symmetric data, to represent different boundary symmetries, and for real-symmetric data they correspond to different forms of the discrete [[discrete cosine transform|cosine]] and [[discrete sine transform|sine]] transforms.

Another interesting choice is &lt;math&gt;a=b=-(N-1)/2&lt;/math&gt;, which is called the '''centered DFT''' (or '''CDFT''').  The centered DFT has the useful property that, when ''N'' is a multiple of four, all four of its eigenvalues (see above) have equal multiplicities (Rubio and Santhanam, 2005)&lt;ref&gt;Santhanam, Balu; Santhanam, Thalanayar S. [http://thamakau.usc.edu/Proceedings/ICASSP%202007/pdfs/0301385.pdf &quot;''Discrete Gauss-Hermite functions and eigenvectors of the centered discrete Fourier transform''&quot;]{{dead link|date=December 2016 |bot=InternetArchiveBot |fix-attempted=yes }}, Proceedings of the 32nd IEEE ''International Conference on Acoustics, Speech, and Signal Processing'' (ICASSP 2007, SPTM-P12.4), vol. III, pp. 1385-1388.&lt;/ref&gt;

The term GDFT is also used for the non-linear phase extensions of DFT. Hence, GDFT method provides a generalization for constant amplitude orthogonal block transforms including linear and non-linear phase types. GDFT is a framework 
to improve time and frequency domain properties of the traditional DFT, e.g. auto/cross-correlations, by the addition of the properly designed phase shaping function (non-linear, in general) to the original linear phase functions (Akansu and Agirman-Tosun, 2010).&lt;ref&gt;Akansu, Ali N.; Agirman-Tosun, Handan 
[http://web.njit.edu/~akansu/PAPERS/AkansuIEEE-TSP2010.pdf &quot;''Generalized Discrete Fourier Transform With Nonlinear Phase''&quot;], IEEE ''Transactions on Signal Processing'', vol. 58, no. 9, pp. 4547–4556, Sept. 2010.&lt;/ref&gt;

The discrete Fourier transform can be viewed as a special case of the [[z-transform]], evaluated on the unit circle in the complex plane; more general z-transforms correspond to ''complex'' shifts ''a'' and ''b'' above.

==Multidimensional DFT==&lt;!-- This section is linked from [[Fast Fourier transform]] --&gt;
The ordinary DFT transforms a one-dimensional sequence or [[matrix (mathematics)|array]] &lt;math&gt;x_n&lt;/math&gt; that is a function of exactly one discrete variable ''n''.  The multidimensional DFT of a multidimensional array &lt;math&gt;x_{n_1, n_2, \dots, n_d}&lt;/math&gt; that is a function of ''d'' discrete variables &lt;math&gt;n_\ell = 0, 1, \dots, N_\ell-1&lt;/math&gt; for &lt;math&gt;\ell&lt;/math&gt; in &lt;math&gt;1, 2, \dots, d&lt;/math&gt; is defined by:

:&lt;math&gt;X_{k_1, k_2, \dots, k_d} = \sum_{n_1=0}^{N_1-1} \left(\omega_{N_1}^{~k_1 n_1} \sum_{n_2=0}^{N_2-1} \left( \omega_{N_2}^{~k_2 n_2} \cdots \sum_{n_d=0}^{N_d-1} \omega_{N_d}^{~k_d n_d}\cdot x_{n_1, n_2, \dots, n_d} \right) \right) \, , &lt;/math&gt;

where &lt;math&gt;\omega_{N_\ell} = \exp(-i 2\pi/N_\ell)&lt;/math&gt; as above and the ''d'' output indices run from &lt;math&gt;k_\ell = 0, 1, \dots, N_\ell-1&lt;/math&gt;.  This is more compactly expressed in [[coordinate vector|vector]] notation, where we define &lt;math&gt;\mathbf{n} = (n_1, n_2, \dots, n_d)&lt;/math&gt; and &lt;math&gt;\mathbf{k} = (k_1, k_2, \dots, k_d)&lt;/math&gt; as ''d''-dimensional vectors of indices from 0 to &lt;math&gt;\mathbf{N} - 1&lt;/math&gt;, which we define as &lt;math&gt;\mathbf{N} - 1 = (N_1 - 1, N_2 - 1, \dots, N_d - 1)&lt;/math&gt;:

:&lt;math&gt;X_\mathbf{k} = \sum_{\mathbf{n}=\mathbf{0}}^{\mathbf{N}-1} e^{-i 2\pi \mathbf{k} \cdot (\mathbf{n} / \mathbf{N})} x_\mathbf{n} \, ,&lt;/math&gt;

where the division &lt;math&gt;\mathbf{n} / \mathbf{N}&lt;/math&gt; is defined as &lt;math&gt;\mathbf{n} / \mathbf{N} = (n_1/N_1, \dots, n_d/N_d)&lt;/math&gt; to be performed element-wise, and the sum denotes the set of nested summations above.

The inverse of the multi-dimensional DFT is, analogous to the one-dimensional case, given by:

:&lt;math&gt;x_\mathbf{n} = \frac{1}{\prod_{\ell=1}^d N_\ell} \sum_{\mathbf{k}=\mathbf{0}}^{\mathbf{N}-1} e^{i 2\pi \mathbf{n} \cdot (\mathbf{k} / \mathbf{N})} X_\mathbf{k} \, .&lt;/math&gt;

As the one-dimensional DFT expresses the input &lt;math&gt;x_n&lt;/math&gt; as a superposition of sinusoids, the multidimensional DFT expresses the input as a superposition of [[plane wave]]s, or multidimensional sinusoids. The direction of oscillation in space is &lt;math&gt;\mathbf{k} / \mathbf{N}&lt;/math&gt;. The amplitudes  are &lt;math&gt;X_\mathbf{k}&lt;/math&gt;.  This decomposition is of great importance for everything from [[digital image processing]] (two-dimensional) to solving [[partial differential equations]]. The solution is broken up into plane waves.

The multidimensional DFT can be computed by the [[function composition|composition]] of a sequence of one-dimensional DFTs along each dimension.  In the two-dimensional case &lt;math&gt;x_{n_1,n_2}&lt;/math&gt; the &lt;math&gt;N_1&lt;/math&gt; independent DFTs of the rows (i.e., along &lt;math&gt;n_2&lt;/math&gt;) are computed first to form a new array &lt;math&gt;y_{n_1,k_2}&lt;/math&gt;. Then the &lt;math&gt;N_2&lt;/math&gt; independent DFTs of ''y'' along the columns (along &lt;math&gt;n_1&lt;/math&gt;) are computed to form the final result &lt;math&gt;X_{k_1,k_2}&lt;/math&gt;.  Alternatively the columns can be computed first and then the rows. The order is immaterial because the nested summations above [[commutative operation|commute]].

An algorithm to compute a one-dimensional DFT is thus sufficient to efficiently compute a multidimensional DFT.  This approach is known as the ''row-column'' algorithm. There are also intrinsically [[Fast Fourier transform#Multidimensional FFTs|multidimensional FFT algorithms]].

=== The real-input multidimensional DFT ===
For input data &lt;math&gt;x_{n_1, n_2, \dots, n_d}&lt;/math&gt; consisting of [[real numbers]], the DFT outputs have a conjugate symmetry similar to the one-dimensional case above:

:&lt;math&gt;X_{k_1, k_2, \dots, k_d} = X_{N_1 - k_1, N_2 - k_2, \dots, N_d - k_d}^* ,&lt;/math&gt;

where the star again denotes complex conjugation and the &lt;math&gt;\ell&lt;/math&gt;-th subscript is again interpreted modulo &lt;math&gt;N_\ell&lt;/math&gt; (for &lt;math&gt;\ell = 1,2,\ldots,d&lt;/math&gt;).

== Applications ==
The DFT has seen wide usage across a large number of fields; we only sketch a few examples below (see also the references at the end). All applications of the DFT depend crucially on the availability of a fast algorithm to compute discrete Fourier transforms and their inverses, a [[fast Fourier transform]].

=== Spectral analysis ===
When the DFT is used for [[signal spectral analysis]], the &lt;math&gt;\{x_n\}\,&lt;/math&gt; sequence usually represents a finite set of uniformly spaced time-samples of some signal &lt;math&gt;x(t)\,&lt;/math&gt;, where &lt;math&gt;t&lt;/math&gt; represents time.  The conversion from continuous time to samples (discrete-time) changes the underlying [[continuous Fourier transform|Fourier transform]] of &lt;math&gt;x(t)&lt;/math&gt; into a [[discrete-time Fourier transform]] (DTFT), which generally entails a type of distortion called [[aliasing]].  Choice of an appropriate sample-rate (see ''[[Nyquist rate]]'') is the key to minimizing that distortion.  Similarly, the conversion from a very long (or infinite) sequence to a manageable size entails a type of distortion called ''[[Spectral leakage|leakage]]'', which is manifested as a loss of detail (a.k.a. resolution) in the DTFT.  Choice of an appropriate sub-sequence length is the primary key to minimizing that effect.  When the available data (and time to process it) is more than the amount needed to attain the desired frequency resolution, a standard technique is to perform multiple DFTs, for example to create a [[spectrogram]].  If the desired result is a power spectrum and noise or randomness is present in the data, averaging the magnitude components of the multiple DFTs is a useful procedure to reduce the [[variance]] of the spectrum (also called a [[periodogram]] in this context); two examples of such techniques are the [[Welch method]] and the [[Bartlett method]]; the general subject of estimating the power spectrum of a noisy signal is called [[spectral estimation]].

A final source of distortion (or perhaps ''illusion'') is the DFT itself, because it is just a discrete sampling of the DTFT, which is a function of a continuous frequency domain.  That can be mitigated by increasing the resolution of the DFT.  That procedure is illustrated at {{slink|Discrete-time Fourier transform|Sampling the DTFT|nopage=y}}.
*The procedure is sometimes referred to as ''zero-padding'', which is a particular implementation used in conjunction with the [[fast Fourier transform]] (FFT) algorithm.  The inefficiency of performing multiplications and additions with zero-valued &quot;samples&quot; is more than offset by the inherent efficiency of the FFT.
*As already stated, leakage imposes a limit on the inherent resolution of the DTFT, so there is a practical limit to the benefit that can be obtained from a fine-grained DFT.

=== Filter bank ===
See {{slink|Filter bank|FFT filter banks|nopage=y}} and {{slink|Discrete-time Fourier transform|Sampling the DTFT|nopage=y}}.

===Data compression===
The field of digital signal processing relies heavily on operations in the frequency domain (i.e. on the Fourier transform). For example, several [[lossy]] image and sound compression methods employ the discrete Fourier transform: the signal is cut into short segments, each is transformed, and then the Fourier coefficients of high frequencies, which are assumed to be unnoticeable, are discarded. The decompressor computes the inverse transform based on this reduced number of Fourier coefficients. (Compression applications often use a specialized form of the DFT, the [[discrete cosine transform]] or sometimes the [[modified discrete cosine transform]].)
Some relatively recent compression algorithms, however, use [[wavelet transform]]s, which give a more uniform compromise between time and frequency domain than obtained by chopping data into segments and transforming each segment.  In the case of [[JPEG2000]], this avoids the spurious image features that appear when images are highly compressed with the original [[JPEG]].

===Partial differential equations===
Discrete Fourier transforms are often used to solve [[partial differential equations]], where again the DFT is used as an approximation for the [[Fourier series]] (which is recovered in the limit of infinite ''N''). The advantage of this approach is that it expands the signal in complex exponentials &lt;math&gt;e^{inx}&lt;/math&gt;, which are eigenfunctions of differentiation: &lt;math&gt;{\text{d} \big( e^{inx} \big) }/\text{d}x = in e^{inx}&lt;/math&gt;. Thus, in the Fourier representation, differentiation is simple—we just multiply by &lt;math&gt;in&lt;/math&gt;.  (However, the choice of &lt;math&gt;n&lt;/math&gt; is not unique due to aliasing; for the method to be convergent, a choice similar to that in the [[Discrete Fourier transform#Trigonometric interpolation polynomial|trigonometric interpolation]] section above should be used.) A [[linear differential equation]] with constant coefficients is transformed into an easily solvable algebraic equation. One then uses the inverse DFT to transform the result back into the ordinary spatial representation. Such an approach is called a [[spectral method]].

===Polynomial multiplication===

Suppose we wish to compute the polynomial product ''c''(''x'') = ''a''(''x'') · ''b''(''x'').  The ordinary product expression for the coefficients of ''c'' involves a linear (acyclic) convolution, where indices do not &quot;wrap around.&quot;  This can be rewritten as a cyclic convolution by taking the coefficient vectors for ''a''(''x'') and ''b''(''x'') with constant term first, then appending zeros so that the resultant coefficient vectors '''a''' and '''b''' have dimension ''d''&amp;nbsp;&gt;&amp;nbsp;deg(''a''(''x''))&amp;nbsp;+&amp;nbsp;deg(''b''(''x'')).  Then,

:&lt;math&gt;\mathbf{c} = \mathbf{a} * \mathbf{b}&lt;/math&gt;

Where '''c''' is the vector of coefficients for ''c''(''x''), and the convolution operator &lt;math&gt;*\,&lt;/math&gt; is defined so

:&lt;math&gt;c_n = \sum_{m=0}^{d-1}a_m b_{n-m\ \mathrm{mod}\ d} \qquad\qquad\qquad n=0,1\dots,d-1&lt;/math&gt;

But convolution becomes multiplication under the DFT:

:&lt;math&gt;\mathcal{F}(\mathbf{c}) = \mathcal{F}(\mathbf{a})\mathcal{F}(\mathbf{b})&lt;/math&gt;

Here the vector product is taken elementwise.  Thus the coefficients of the product polynomial ''c''(''x'') are just the terms 0, ..., deg(''a''(''x'')) + deg(''b''(''x'')) of the coefficient vector

:&lt;math&gt;\mathbf{c} = \mathcal{F}^{-1}(\mathcal{F}(\mathbf{a})\mathcal{F}(\mathbf{b})).&lt;/math&gt;

With a [[fast Fourier transform]], the resulting algorithm takes O (''N''&amp;nbsp;log&amp;nbsp;''N'') arithmetic operations.  Due to its simplicity and speed, the [[Cooley–Tukey FFT algorithm]], which is limited to [[composite number|composite]] sizes, is often chosen for the transform operation.  In this case, ''d'' should be chosen as the smallest integer greater than the sum of the input polynomial degrees that is factorizable into small prime factors (e.g. 2, 3, and 5, depending upon the FFT implementation).

====Multiplication of large integers====

The fastest known [[multiplication algorithms|algorithms]] for the multiplication of very large [[integer]]s use the polynomial multiplication method outlined above.  Integers can be treated as the value of a polynomial evaluated specifically at the number base, with the coefficients of the polynomial corresponding to the digits in that base (ex. &lt;math&gt;123 = 1 \cdot 10^2 + 2 \cdot 10^1 + 3 \cdot 10^0&lt;/math&gt;).  After polynomial multiplication, a relatively low-complexity carry-propagation step completes the multiplication.

==== Convolution  ====
When data is [[Convolution|convolved]] with a function with wide support, such as for downsampling by a large sampling ratio, because of the [[Convolution theorem]] and the FFT algorithm, it may be faster to transform it, multiply pointwise by the transform of the filter and then reverse transform it.  Alternatively, a good filter is obtained by simply truncating the transformed data and re-transforming the shortened data set.

==Some discrete Fourier transform pairs==

{| class=&quot;wikitable&quot; style=&quot;text-align: center;&quot;
|+ '''Some DFT pairs'''
|-
! &lt;math&gt;x_n = \frac{1}{N}\sum_{k=0}^{N-1}X_k  e^{i 2 \pi kn/N} &lt;/math&gt;
! &lt;math&gt;X_k = \sum_{n=0}^{N-1}x_n  e^{-i 2 \pi kn/N} &lt;/math&gt;
! Note
|-
| &lt;math&gt;x_n e^{i 2 \pi n\ell/N} \,&lt;/math&gt;
| &lt;math&gt;X_{k-\ell}\,&lt;/math&gt;
| Frequency shift theorem
|-
| &lt;math&gt;x_{n-\ell}\,&lt;/math&gt;
| &lt;math&gt;X_k  e^{-i 2 \pi k\ell/N} \,&lt;/math&gt;
| Time shift theorem
|-
| &lt;math&gt;x_n \in \mathbb{R}&lt;/math&gt;
| &lt;math&gt;X_k=X_{N-k}^*\,&lt;/math&gt;
| Real DFT
|-
| &lt;math&gt;a^n\,&lt;/math&gt;
| &lt;math&gt;\left\{ \begin{matrix}
                   N &amp; \mbox{if } a = e^{i 2 \pi k/N} \\
                   \frac{1-a^N}{1-a \, e^{-i 2 \pi k/N} } &amp; \mbox{otherwise}
                \end{matrix} \right. &lt;/math&gt;
| from the [[geometric progression]] formula
|-
| &lt;math&gt;{N-1 \choose n}\,&lt;/math&gt;
| &lt;math&gt;\left(1+e^{-i 2 \pi k/N} \right)^{N-1}\,&lt;/math&gt;
| from the [[binomial theorem]]
|-
| &lt;math&gt;\left\{ \begin{matrix}
                        \frac{1}{W} &amp; \mbox{if } 2n &lt; W \mbox{ or } 2(N-n) &lt; W \\
                        0 &amp; \mbox{otherwise}
                      \end{matrix} \right. &lt;/math&gt;
| &lt;math&gt;\left\{ \begin{matrix}
              1 &amp; \mbox{if } k = 0 \\
              \frac{\sin\left(\frac{\pi W k}{N}\right)}
                   {W \sin\left(\frac{\pi k}{N}\right)} &amp; \mbox{otherwise}
                      \end{matrix} \right. &lt;/math&gt;
| &lt;math&gt;x_n&lt;/math&gt; is a rectangular [[window function]] of ''W'' points centered on ''n''=0, where ''W'' is an [[odd integer]], and &lt;math&gt;X_k&lt;/math&gt; is a [[sinc]]-like function (specifically, &lt;math&gt;X_k&lt;/math&gt; is a [[Dirichlet kernel]])
|-
| &lt;math&gt;\sum_{j\in\mathbb{Z}} \exp\left(-\frac{\pi}{cN}\cdot(n+N\cdot j)^2\right)&lt;/math&gt;
| &lt;math&gt;\sqrt{cN} \cdot \sum_{j\in\mathbb{Z}} \exp\left(-\frac{\pi c}{N}\cdot(k+N\cdot j)^2\right)&lt;/math&gt;
| [[Discretization]] and [[periodic summation]] of the scaled [[Gaussian function]]s for &lt;math&gt;c&gt;0&lt;/math&gt;. Since either &lt;math&gt;c&lt;/math&gt; or &lt;math&gt;\frac{1}{c}&lt;/math&gt; is larger than one and thus warrants fast convergence of one of the two series, for large &lt;math&gt;c&lt;/math&gt; you may choose to compute the frequency spectrum and convert to the time domain using the discrete Fourier transform.
|}

==Generalizations==

=== Representation theory ===
{{details|Representation theory of finite groups#Discrete Fourier transform}}

The DFT can be interpreted as the complex-valued [[representation theory]] of the finite [[cyclic group]]. In other words, a sequence of &lt;math&gt;n&lt;/math&gt; complex numbers can be thought of as an element of &lt;math&gt;n&lt;/math&gt;-dimensional complex space &lt;math&gt;\mathbb{C}^n&lt;/math&gt; or equivalently a function &lt;math&gt;f&lt;/math&gt; from the finite cyclic group of order &lt;math&gt;n&lt;/math&gt; to the complex numbers, &lt;math&gt;\mathbb{Z}_n \mapsto \mathbb{C}&lt;/math&gt;. So  &lt;math&gt;f&lt;/math&gt; is a [[class function]] on the finite cyclic group, and thus can be expressed as a linear combination of the irreducible characters of this group, which are the roots of unity.

From this point of view, one may generalize the DFT to representation theory generally, or more narrowly to the [[representation theory of finite groups]].

More narrowly still, one may generalize the DFT by either changing the target (taking values in a field other than the complex numbers), or the domain (a group other than a finite cyclic group), as detailed in the sequel.

=== Other fields ===
{{Main|Discrete Fourier transform (general)|Number-theoretic transform}}
Many of the properties of the DFT only depend on the fact that &lt;math&gt;e^{-\frac{i 2 \pi}{N}}&lt;/math&gt; is a [[primitive root of unity]], sometimes denoted &lt;math&gt;\omega_N&lt;/math&gt; or &lt;math&gt;W_N&lt;/math&gt; (so that &lt;math&gt;\omega_N^N = 1&lt;/math&gt;).  Such properties include the completeness, orthogonality, Plancherel/Parseval, periodicity, shift, convolution, and unitarity properties above, as well as many FFT algorithms. For this reason, the discrete Fourier transform can be defined by using roots of unity in [[field (mathematics)|fields]] other than the complex numbers, and such generalizations are commonly called ''number-theoretic transforms'' (NTTs) in the case of [[finite field]]s. For more information, see [[number-theoretic transform]] and [[discrete Fourier transform (general)]].

=== Other finite groups ===
{{Main|Fourier transform on finite groups}}
The standard DFT acts on a sequence ''x''&lt;sub&gt;0&lt;/sub&gt;, ''x''&lt;sub&gt;1&lt;/sub&gt;, ..., ''x''&lt;sub&gt;''N''&amp;minus;1&lt;/sub&gt; of complex numbers, which can be viewed as a function {0, 1, ..., ''N'' &amp;minus; 1} → '''C'''. The multidimensional DFT acts on multidimensional sequences, which can be viewed as functions
:&lt;math&gt; \{0, 1, \ldots, N_1-1\} \times \cdots \times \{0, 1, \ldots, N_d-1\} \to \mathbb{C}. &lt;/math&gt;
This suggests the generalization to [[Fourier transform on finite groups|Fourier transforms on arbitrary finite groups]], which act on functions ''G'' → '''C''' where ''G'' is a [[finite group]]. In this framework, the standard DFT is seen as the Fourier transform on a [[cyclic group]], while the multidimensional DFT is a Fourier transform on a direct sum of cyclic groups.

Further, Fourier transform can be on cosets of a group.

==Alternatives==
{{Main|Discrete wavelet transform}}
{{details|Discrete wavelet transform#Comparison with Fourier transform}} There are various alternatives to the DFT for various applications, prominent among which are [[wavelets]]. The analog of the DFT is the [[discrete wavelet transform]] (DWT). From the point of view of [[time–frequency analysis]], a key limitation of the Fourier transform is that it does not include ''location'' information, only ''frequency'' information, and thus has difficulty in representing transients. As wavelets have location as well as frequency, they are better able to represent location, at the expense of greater difficulty representing frequency. For details, see [[Discrete wavelet transform#Comparison with Fourier transform|comparison of the discrete wavelet transform with the discrete Fourier transform]].

==See also==
*[[Companion matrix]]
*[[DFT matrix]]
*[[Fast Fourier transform]]
*[[FFTPACK]]
*[[FFTW]]
*[[Generalizations of Pauli matrices]]
*[[List of Fourier-related transforms]]
*[[Multidimensional transform]]
*[[Zak transform]]
*[[Quantum Fourier transform]]

==Notes==
{{notelist-ua}}

==References==
{{Reflist|32em}}

==Further reading==
{{More footnotes|date=January 2009}}
* {{cite book
 | last = Brigham | first = E. Oran
 | title=The fast Fourier transform and its applications
 | location = Englewood Cliffs, N.J.
 | publisher = Prentice Hall
 | year=1988
 | isbn=978-0-13-307505-2
 }}
* {{cite book
 |author1= Oppenheim, Alan V. |author2-link=Ronald W. Schafer |author2=Schafer, R. W. |author3=Buck, J. R.
  | title = Discrete-time signal processing
 |url= https://archive.org/details/discretetimesign00alan |url-access= registration | location = Upper Saddle River, N.J.
 | publisher = Prentice Hall
 | year = 1999
 | isbn = 978-0-13-754920-7
 |author1-link=Alan V. Oppenheim }}
* {{cite book
 | last = Smith | first = Steven W.
 | chapter-url = http://www.dspguide.com/ch8/1.htm
 | title = The Scientist and Engineer's Guide to Digital Signal Processing
 | edition = Second
 | location = San Diego, Calif.
 | publisher = California Technical Publishing
 | year=1999
 | isbn=978-0-9660176-3-2
 | chapter = Chapter 8: The Discrete Fourier Transform
}}
* {{cite book
 | first = Thomas H. | last = Cormen | authorlink = Thomas H. Cormen |author2=Charles E. Leiserson | author3-link = Ronald L. Rivest |author3=Ronald L. Rivest | author4-link = Clifford Stein |author4=Clifford Stein
 | year = 2001
 | title = Introduction to Algorithms
 | edition = Second
 | publisher = MIT Press and McGraw-Hill
 | isbn = 978-0-262-03293-3
 | chapter = Chapter 30: Polynomials and the FFT
 | pages = 822–848
 | title-link = Introduction to Algorithms | author2-link = Charles E. Leiserson }} esp. section 30.2: The DFT and FFT, pp.&amp;nbsp;830–838.
* {{cite journal
 |author1=P. Duhamel |author2=B. Piron |author3=J. M. Etcheto | title = On computing the inverse DFT
 | journal =IEEE Transactions on Acoustics, Speech, and Signal Processing
 | volume = 36 | issue = 2 | pages = 285–286 | year = 1988
 | doi = 10.1109/29.1519
 }}
* {{cite journal
 |author1=J. H. McClellan |author2=T. W. Parks | title = Eigenvalues and eigenvectors of the discrete Fourier transformation
 | journal =IEEE Transactions on Audio and Electroacoustics
 | volume = 20 | issue = 1 | pages = 66–74 | year = 1972
 | doi = 10.1109/TAU.1972.1162342
 }}
* {{cite journal
 |author1=Bradley W. Dickinson |author2=Kenneth Steiglitz | title = Eigenvectors and functions of the discrete Fourier transform
 | journal =IEEE Transactions on Acoustics, Speech, and Signal Processing
 | volume = 30 | issue = 1 | pages = 25–31 | year = 1982
 | doi = 10.1109/TASSP.1982.1163843
 | url = http://www.cs.princeton.edu/~ken/Eigenvectors82.pdf|citeseerx=10.1.1.434.5279 }} (Note that this paper has an apparent typo in its table of the eigenvalue multiplicities: the +''i''/&amp;minus;''i'' columns are interchanged.  The correct table can be found in McClellan and Parks, 1972, and is easily confirmed numerically.)
* {{cite journal
 | author = F. A. Grünbaum
 | title = The eigenvectors of the discrete Fourier transform
 | journal =Journal of Mathematical Analysis and Applications
 | volume = 88 | issue = 2 | pages = 355–363 | year = 1982
 | doi = 10.1016/0022-247X(82)90199-8
 }}
* {{cite journal
 |author1=Natig M. Atakishiyev |author2=Kurt Bernardo Wolf | title = Fractional Fourier-Kravchuk transform
 | journal =Journal of the Optical Society of America A
 | volume = 14 | issue = 7 | pages = 1467–1477 | year = 1997
 | doi = 10.1364/JOSAA.14.001467
 |bibcode = 1997JOSAA..14.1467A }}
* {{cite journal
 |author1=C. Candan |author2=M. A. Kutay |author3=H. M.Ozaktas | title = The discrete fractional Fourier transform
 | journal = IEEE Transactions on Signal Processing
 | volume = 48 | issue = 5 | pages = 1329–1337 | year = 2000
 | doi = 10.1109/78.839980
 |bibcode = 2000ITSP...48.1329C |url=http://www.ee.bilkent.edu.tr/~haldun/publications/ozaktas166.pdf|hdl=11693/11130 }}
* {{cite journal
 | author = Magdy Tawfik Hanna, Nabila Philip Attalla Seif, and Waleed Abd El Maguid Ahmed
 | title = Hermite-Gaussian-like eigenvectors of the discrete Fourier transform matrix based on the singular-value decomposition of its orthogonal projection matrices
 | journal =IEEE Transactions on Circuits and Systems I: Regular Papers
 | volume = 51 | issue = 11 | pages = 2245–2254 | year = 2004
 | doi = 10.1109/TCSI.2004.836850
 }}
*{{cite journal
 |author1=Shamgar Gurevich |author2=Ronny Hadani | title=On the diagonalization of the discrete Fourier transform
 | id=preprint at
 | journal=Applied and Computational Harmonic Analysis
 | volume = 27 | issue = 1 | year=2009
 | pages=87–99
 | doi=10.1016/j.acha.2008.11.003
 | arxiv=0808.3281
}}
*{{cite journal
 |author1=Shamgar Gurevich |author2=Ronny Hadani |author3=Nir Sochen | title=The finite harmonic oscillator and its applications to sequences, communication and radar
 | id=preprint at
 | journal= IEEE Transactions on Information Theory
 | volume = 54 | issue = 9 | pages = 4239–4253 | year=2008
 | doi=10.1109/TIT.2008.926440
 | arxiv=0808.1495
|bibcode=2008arXiv0808.1495G }}
* {{cite journal
 |author1=Juan G. Vargas-Rubio |author2=Balu Santhanam | title = On the multiangle centered discrete fractional Fourier transform
 | journal =IEEE Signal Processing Letters
 | volume = 12 | issue = 4 | pages = 273–276 | year = 2005
 | doi = 10.1109/LSP.2005.843762
 |bibcode = 2005ISPL...12..273V }}
* {{cite journal
 | author = [[James Cooley|J. Cooley]], P. Lewis, and P. Welch
 | title = The finite Fourier transform
 | journal =IEEE Transactions on Audio and Electroacoustics
 | volume = 17 | issue = 2 | pages = 77–85 | year = 1969
 | doi = 10.1109/TAU.1969.1162036
 }}
* {{cite journal
 | author = F.N. Kong
 | title = Analytic Expressions of Two Discrete Hermite-Gaussian Signals
 | journal =IEEE Transactions on Circuits and Systems II: Express Briefs
 | volume = 55 | issue = 1 | pages = 56–60 | year = 2008
 | doi = 10.1109/TCSII.2007.909865
}}

==External links==
*[https://jackschaedler.github.io/circles-sines-signals/ Interactive explanation of the DFT]
*[https://www.nbtwiki.net/doku.php?id=tutorial:the_discrete_fourier_transformation_dft Matlab tutorial on the Discrete Fourier Transformation]
*[https://web.archive.org/web/20160523205720/http://www.fourier-series.com/fourierseries2/DFT_tutorial.html Interactive flash tutorial on the DFT]
*[http://ccrma.stanford.edu/~jos/mdft/mdft.html Mathematics of the Discrete Fourier Transform by Julius O. Smith III]
*[http://www.fftw.org FFTW: Fast implementation of the DFT - coded in C and under General Public License (GPL)]
*[http://www.kurims.kyoto-u.ac.jp/~ooura/fft.html General Purpose FFT Package:  Yet another fast DFT implementation in C &amp;amp; FORTRAN, permissive license]
*[http://web.mit.edu/newsoffice/2009/explained-fourier.html Explained: The Discrete Fourier Transform]
*[https://web.archive.org/web/20171010173422/http://en.dsplib.org/content/dft.html Discrete Fourier Transform]
*[https://web.archive.org/web/20171113135838/http://en.dsplib.org/content/dft_freq.html Indexing and shifting of Discrete Fourier Transform]
*[https://web.archive.org/web/20171106092801/http://en.dsplib.org/content/dft_prop.html Discrete Fourier Transform Properties]

{{DSP}}

{{DEFAULTSORT:Discrete Fourier Transform}}
[[Category:Fourier analysis]]
[[Category:Digital signal processing]]
[[Category:Numerical analysis]]
[[Category:Discrete transforms]]
[[Category:Unitary operators]]

[[cs:Fourierova transformace#Diskrétní Fourierova transformace]]
[[pt:Transformada de Fourier#Transformada discreta de Fourier]]
[[fi:Fourier'n muunnos#Diskreetti Fourier'n muunnos]]</text>
      <sha1>g7it1q2mhghug8my14votmolq04kofy</sha1>
    </revision>
  </page>
